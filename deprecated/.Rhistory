#%>% as_tibble() %>% nest(name_1006= name_1006) %>% mutate(name_1006 = name_1006) -> nested_df
transporters <- purrr::map2(clusters_list, c(T,T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F,F), get_functional_annots)
reactions
base_size =6
table_1  <- ggtexttable(reactions$`1`, rows = NULL,
theme = ttheme(
base_size = base_size,
padding = unit(c(1.5, 1.5), "mm"),
colnames.style = colnames_style(size = 7, fill = "#8cc257", color = "white"),
rownames.style = rownames_style(size = base_size),
tbody.style = tbody_style(size = base_size, fill = c("#e8f3de", "#d3e8bb"))
)) %>%
tab_add_title(text = 'Table 1.', face = "bold", size = 8, padding = unit(.3, "line"), hjust = 0.1) %>%
tab_add_footnote(text = "(Cluster 1)", size = 8, face = "italic",  padding = unit(.5, "line"))
table_2  <- ggtexttable(reactions$`2`, rows = NULL,
theme = ttheme(
base_size = base_size,
padding = unit(c(1.5, 1.5), "mm"),
colnames.style = colnames_style(size = 7, fill = "#8cc257", color = "white"),
rownames.style = rownames_style(size = base_size),
tbody.style = tbody_style(size = base_size, fill = c("#e8f3de", "#d3e8bb"))
))  %>%
tab_add_title(text = 'Table 2.', face = "bold", size = 8, padding = unit(.3, "line"), hjust = 0.1) %>%
tab_add_footnote(text = "(Cluster 2)", size = 8, face = "italic",  padding = unit(.5, "line"))
table_3  <- ggtexttable(reactions$`3`, rows = NULL,
theme = ttheme(
base_size = base_size,
padding = unit(c(1.5, 1.5), "mm"),
colnames.style = colnames_style(size = 7, fill = "#8cc257", color = "white"),
rownames.style = rownames_style(size = base_size),
tbody.style = tbody_style(size = base_size, fill = c("#e8f3de", "#d3e8bb"))
))%>%
tab_add_title(text = 'Table 3.', face = "bold", size = 8, padding = unit(.3, "line"), hjust = 0.1) %>%
tab_add_footnote(text = "(Cluster 3)", size = 8, face = "italic",  padding = unit(.5, "line"))
left_tables <-  ggarrange(table_1, table_2, ncol = 1, heights = c(1, 1),  labels = c("", ""),  hjust=0, vjust = 3,  font.label=list(color="black",size=9))
reactions_genes_tables <- ggarrange(left_tables,  table_3, labels = c("", ""), widths = c(1, 1.8),  hjust=0, vjust = 1.1,  font.label=list(color="black",size=9))
reactions_genes_tables #%>% annotate_figure(top = text_grob(bquote("Reactions associated genes"), rot = 0, color = "seagreen4"))
purrr::map2(reactions, c("Entrez ID","Entrez ID","Entrez ID"), pull) %>%
compareCluster(fun='enrichKEGG', pvalueCutoff=1e-2, qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 9, label_format =50)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6)) -> enrichKEGG
purrr::map2(reactions, c("Entrez ID","Entrez ID","Entrez ID"), pull) %>% compareCluster(fun='enrichDGN', pvalueCutoff=1e-2,  qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 9, label_format =40)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))-> enrichDGN
enrichDGN
purrr::map2(transporters, c("Entrez ID","Entrez ID","Entrez ID"), pull) %>%
compareCluster(fun='enrichKEGG', pvalueCutoff=5e-2, qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 9, label_format =50)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6)) -> enrichKEGG
purrr::map2(transporters, c("Entrez ID","Entrez ID","Entrez ID"), pull) %>% compareCluster(fun='enrichDGN', pvalueCutoff=1e-2,  qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 9, label_format =40)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))-> enrichDGN
enrichDGN
purrr::map2(transporters, c("Entrez ID","Entrez ID","Entrez ID"), pull) %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 9, label_format =40)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))-> enrichDGN
enrichDGN
purrr::map2(transporters, c("Entrez ID","Entrez ID","Entrez ID"), pull) %>% compareCluster(fun='enrichDGN', pvalueCutoff=1e-2,  qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 9, label_format =40)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))-> enrichDGN
enrichDGN
#
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df <- read_csv("./results/data/data_for_R/Masked_results_for_R.csv") %>% dplyr::select(-c("...1"))
labels <- read_csv("./results/data/data_for_R/Mask_train_labels.csv") %>%  dplyr::select(-c("...1")) %>% .[[1]]
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
library(tidyverse)
setwd("/DeepenData/Repos/geometric_cobra")
subsys_fluxes_non_zero <- arrow::read_parquet("./results/data/flux_samples/subsys_fluxes_non_zero.parquet.gzip")
library(tidyverse)
setwd("/DeepenData/Repos/geometric_cobra")
oversampled_augmented_metabolite_data <- arrow::read_parquet("./results/data/oversampled_augmented_metabolite_data.parquet.gzip")
metabolite_data <- rename(oversampled_augmented_metabolite_data, Condicion = label) %>% dplyr::mutate(Condicion = if_else(Condicion== 1, 'PKU', 'Control'))
setwd("/DeepenData/Repos/geometric_cobra")
library(tidyverse)
library(ggpubr)
#metabolite_data <- read_csv("./results/data/metabolite_data.csv")
ACs_PKU <- metabolite_data %>% dplyr::filter(Condicion=='PKU') %>% select_if(is.numeric) %>% select(dplyr::matches('C\\d+')) %>% select(!dplyr::matches('suac'))
AAs_PKU <- metabolite_data %>% dplyr::filter(Condicion=='PKU') %>% select_if(is.numeric) %>% select(!dplyr::matches('C\\d+')) %>% select(!dplyr::matches('suac'))
ACs_Control <- metabolite_data %>% dplyr::filter(Condicion=='Control') %>% select_if(is.numeric) %>% select(dplyr::matches('C\\d+')) %>% select(!dplyr::matches('suac'))
AAs_Control <- metabolite_data %>% dplyr::filter(Condicion=='Control') %>% select_if(is.numeric) %>% select(!dplyr::matches('C\\d+')) %>% select(!dplyr::matches('suac'))
library(ComplexHeatmap)
plot_densityHeatmap <- function(df, title, pallete){
return(
ggplotify::as.ggplot(densityHeatmap(df %>% scale , ylim = c(-2, 2), cluster_columns = TRUE, title = title, ylab = "", col = pallete,
title_gp = gpar(fontsize = 8), tick_label_gp = gpar(fontsize = 7), quantile_gp = gpar(fontsize = 7),
column_names_gp = gpar(fontsize = 7),column_names_rot = 60 ))
)}
AAs_Control_plot <-AAs_Control  %>% plot_densityHeatmap("", rev(RColorBrewer::brewer.pal(11, "Spectral")))
ACs_Control_plot <-ACs_Control   %>% plot_densityHeatmap("", rev(RColorBrewer::brewer.pal(11, "Spectral")))
AAs_PKU_plot <- AAs_PKU   %>% plot_densityHeatmap("", rev(RColorBrewer::brewer.pal(11, "Spectral")))
ACs_PKU_plot <- ACs_PKU   %>% plot_densityHeatmap("", rev(RColorBrewer::brewer.pal(11, "Spectral")))
FLUX_PKU_plot  <- subsys_fluxes_non_zero  %>% plot_densityHeatmap("", rev(RColorBrewer::brewer.pal(15, "RdYlGn")))
FLUX_PKU_plot
densityHeatmap_panel <- ggarrange(ACs_Control_plot,ACs_PKU_plot,AAs_Control_plot,AAs_PKU_plot, ncol = 1 ,  common.legend = T, heights = c(1,1,.9,.9), labels = c("a","b","c","e"))
densityHeatmap_panel
library(umap)
data_control <-cbind(AAs_Control,ACs_Control)
data_PKU     <- cbind(AAs_PKU,ACs_PKU)
data_control["Group"] <- "Control"
data_PKU["Group"] <- "PKU"
data <- rbind(data_PKU,data_control)
UMAPM <- umap(data  %>% select_if(is.numeric) %>% as.matrix(), n_neighbors = 50, scale = T, n_threads = 20, fast_sgd = F, metric = 'cosine', spread = 1)
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue4", "gold4"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue", "gold4"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue", "gold1"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue", "gold2"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue2", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue2", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
ggarrange(densityHeatmap_panel, UMAP_plus_graph, widths = c(1, .75), ncol = 2) -> panel
panel
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue3", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("blue3", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("coral", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("coral4", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("brown", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("brown4", "gold3"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("gold3", "brown4"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
ggarrange(densityHeatmap_panel, UMAP_plus_graph, widths = c(1, .75), ncol = 2) -> panel
panel
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
ggarrange(densityHeatmap_panel, UMAP_plus_graph, widths = c(1, .75), ncol = 2) -> panel
panel
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("cadetblue", "brown4"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("cadetblue", "deepblue"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .2) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values = c("cadetblue", "blue"))+ theme(text = element_text(size = 9))   +
guides(color = guide_legend(override.aes = list(size = 3) ) )+guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
UMAP_reduction
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG("./results/figures/tests/recon_metabolites.png")
graph <- ggplot() + background_image(img)
UMAP_plus_graph <- ggarrange(UMAP_reduction, graph, FLUX_PKU_plot, ncol = 1, heights = c(1, 2, 1), labels = c("f","g","h"))
UMAP_plus_graph
ggarrange(densityHeatmap_panel, UMAP_plus_graph, widths = c(1, .75), ncol = 2) -> panel
panel
#
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df <- read_csv("./results/data/data_for_R/Masked_results_for_R.csv") %>% dplyr::select(-c("...1"))
labels <- read_csv("./results/data/data_for_R/Mask_train_labels.csv") %>%  dplyr::select(-c("...1")) %>% .[[1]]
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edges_genes   <- df%>%  dplyr::select_if(is.character)
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
#view(edges_genes)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(.75, 0.5))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% scale %>% rescale
dim(processed_data)
length(labels_SAMPLE)
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation(Group = labels_SAMPLE,
col = list(Group = c(
"Control"        = "green4",
"PKU"            =  "orange")))
top_annotation <- columnAnnotation(`Score` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3", "C4"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "ward.D2"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "ward.D2"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 3,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(12, "cm"),
height = unit(6, "cm"),
show_column_names = F,
show_row_names = F,
#column_title = c( "Edges from the metabolic network"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation)
#,
#        bottom_annotation = bottom_annotation)
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
ht
class(ht)
setwd("/DeepenData/Repos/geometric_cobra")
saveRDS(ht, file = "heatmap_test.rds")
#setwd("/DeepenData/Repos/geometric_cobra")
#saveRDS(ht, file = "heatmap_test.rds")
heatmap_clusters
setwd("/DeepenData/Repos/geometric_cobra")
saveRDS(heatmap_clusters, file = "heatmap_clusters_test.rds")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df <- read_csv("./results/data/data_for_R/Non_masked_results_for_R.csv") %>% dplyr::select(-c("...1"))
labels <- read_csv("./results/data/data_for_R/Non_Masked_train_labels.csv") %>%  dplyr::select(-c("...1")) %>% .[[1]]
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edges_genes   <- df%>%  dplyr::select_if(is.character)
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
view(edges_genes)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(.5, 0.5))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% scale %>% rescale
dim(processed_data)
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation(Group = labels_SAMPLE,
col = list(Group = c(
'Control'        = "green4",
'PKU'           =  "orange")))
top_annotation <- columnAnnotation(`Score` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3", "C4"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "complete"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "complete"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 4,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(15, "cm"),
height = unit(8, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Edges from the metabolic network"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation)
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(.5, 0.5))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
dim(processed_data)
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation(Group = labels_SAMPLE,
col = list(Group = c(
'Control'        = "green4",
'PKU'           =  "orange")))
top_annotation <- columnAnnotation(`Score` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3", "C4"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "complete"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "complete"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 4,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(15, "cm"),
height = unit(8, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Edges from the metabolic network"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation)
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
setwd("/DeepenData/Repos/geometric_cobra/deprecated")
