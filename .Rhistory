flux_subsample %>% dplyr::select(c(flux_set, 'Group'))    %>%
summarise(across(where(is.double),  ~ max(.x, na.rm = TRUE))) %>%
t %>% as.data.frame() %>% arrange(desc(V1)) %>% rownames() -> sorted_vars
setdiff(sorted_vars, c("Phe")) -> v
flux_subsample %>% dplyr::select(c(v[a:b], 'Group')) %>% pivot_longer(-Group) -> df
df %>%                           ggplot(aes(x= reorder(name, -value), y=value, color=Group)) -> P0
if(gray){P0 <- P0  + theme_gray() }else{ P0 <- P0  + theme_minimal()}#+ theme_minimal() +
P0 + geom_boxplot(width = .15, outlier.shape = NA) + #theme(axis.title.x = element_blank(),axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
geom_point(position=position_quasirandom(dodge.width = dodge.width, width = swarm_width), alpha = .8, size =point_size)+
scale_colour_manual(values = c(color_1 ,color_2))+
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle = angle, vjust = 0, hjust=.5),axis.text = element_text(size = size_ticks_size),axis.title = element_text(size = axis_title_size),
legend.position=legend.position,
legend.text = element_text(size=8)) -> p
#if(y_label){p <-p   + ylab(expression("Flux"))}else{p <-p   +theme(axis.title.y = element_blank())}
return(p)
}
flux_1 <- get_flux_plot(flux_set = PHE, a = 1,b = 1,dodge.width = 1.7,swarm_width = .25,point_size  = .1,axis_title_size = 9,size_ticks_size =9,angle =45,legend.position = "none", y_label = T, gray = T) +
xlab(("")) + ylab(("Flux (%)")) + coord_trans( y="log2") + geom_hline(yintercept=c(2, 100), linetype="dashed",
color = c("red", "black"), size=.51) + scale_y_continuous(breaks=c(2,100)) + stat_compare_means(label = "p.signif", method = 'wilcox.test', vjust = 0)
ggarrange(flux_1, nrow = 1, widths = c(1), labels = 'h') -> PAH_subplot
ggarrange(umap_panel, PAH_subplot, ncol = 2, widths = c(1.5,1)) -> umap_PAH_panel
THBP <- c("DHPR", "DHPR2", "THBPT4ACAMDASE", "r0403", "r0398", 'DHPR2', 'PPOR', 'PTHPS', 'THBPT4ACAMDASE', 'r0403', 'r0545', 'r0547', 'PHLAC', 'DHPR', 'r0398',  'HMR_6770',  'HMR_6854', 'HMR_6874')
flux_1 <- get_flux_plot(flux_set = THBP, a = 1,b = 4,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 9,size_ticks_size =5,angle =0,legend.position = "none", y_label = T) + ylab(("Flux"))+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
flux_2 <-get_flux_plot(flux_set = THBP, a = 7,b = 10,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 1,size_ticks_size =5,angle =0,legend.position = "none", y_label = T)  + ylim(c(0,5))+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
flux_3 <-get_flux_plot(flux_set = THBP, a = 11,b = 13,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 1,size_ticks_size =5,angle =0,legend.position = "none", y_label = T)  + stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
ggarrange(flux_1, flux_2, flux_3, nrow = 1, widths = c(1, 1.6), labels = "i") -> THBP_fluxes
THBP_fluxes
ACYL <- c(  'C181OHc', 'C40CPT1', 'FAOXC3DC',
'CSNATr', 'C30CPT1', 'C140CPT1', 'C141CPT1', 'FAOXC12DCc', 'C121CPT1', 'ADRNCPT1',  'C160CPT1', 'C161CPT1',
'C180CPT1', 'C181CPT1', 'C204CPT1', 'C226CPT1', 'CLPNDCPT1', 'DMNONCOACRNCPT1', 'DMNONCOACRNCPT1', 'EICOSTETCPT1', 'OCTDECCPT1', 'OCD11COACPT1', 'C81CPT1', 'C80CPT1', 'C60CPT1', 'C51CPT1')#, )#, 'DMNONCOACRNCPT1')#, 'EICOSTETCPT1'),'FAOXC14C12m', 'C50CPT1''ARACHCPT1','C161CPT12', 'FAOXC14C14OHm',
flux_1 <- get_flux_plot(flux_set = ACYL, a = 1, b = 10,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 9,size_ticks_size =5,angle =0,legend.position = "none", y_label = T) + ylab(("Flux"))+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1,  size = 3)
#flux_2 <-get_flux_plot(flux_set = ACYL, a = 14,b = 17,dodge.width = 1,swarm_width = .1,point_size  = .3,axis_title_size = 1,size_ticks_size =7,angle =45,legend.position = "none", y_label = T)  + stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5)#+ ylim(c(0,15))
#flux_4 <-get_flux_plot(flux_set = ACYL, a = 13,b = 15,dodge.width = 1,swarm_width = .1,point_size  = .3,axis_title_size = 1,size_ticks_size =5,angle =45,legend.position = "none", y_label = T)  #+ coord_trans( y="log2")
ggarrange(flux_1, nrow = 1, widths = c(3,1), labels = 'j') -> ACYLS_fluxes
ACYLS_fluxes
ggarrange(THBP_fluxes, ACYLS_fluxes, ncol = 1) -> flux_panel
ggarrange(umap_PAH_panel, flux_panel, nrow = 1, widths = c(.5,1)) -> lower_panel
lower_panel
ggarrange(metabolites_concentration_panel, lower_panel, ncol = 1, heights = c(1,.65)) -> metabolome_flux_panel
metabolome_flux_panel
library(tidyverse)
library(magrittr)
library(ggbeeswarm)
library(ggpubr)
setwd("/DeepenData/Repos/geometric_cobra")
#img <- png::readPNG("./results/graphs/for_visualizations/control_concentration.png")
control_concentration.png <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/metabolites_control.png"))
PKU_concentration.png     <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/metabolites_PKU.png"))
control_fluxes.png     <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/flux_control.png"))
PKU_fluxes.png         <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/flux_PKU.png"))
annotate_figure(control_concentration.png, left = 'Metabolite abundance', top = 'Control') -> control_concentration.png
annotate_figure(PKU_concentration.png,  top = 'PKU') -> PKU_concentration.png
ggarrange(control_concentration.png, PKU_concentration.png, nrow = 1, labels = c("k","")) -> left_graphs
annotate_figure(control_fluxes.png, left = 'Flux', top = 'Control') -> control_fluxes.png
annotate_figure(PKU_fluxes.png,  top = 'PKU') -> PKU_fluxes.png
ggarrange(control_fluxes.png, PKU_fluxes.png, nrow = 1, labels = c("l","")) -> right_graphs
ggarrange(left_graphs, right_graphs, nrow = 1) ->  graphs_panel
graphs_panel
#ggarrange(control_concentration.png, PKU_concentration.png, control_fluxes.png, PKU_fluxes.png, nrow = 1, labels = c("k","","l","")) ->  graphs_panel
#graphs_panel
ggarrange(metabolome_flux_panel, graphs_panel, ncol = 1, heights = c(4,1.3)) -> full_panel
full_panel
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_1.png",full_panel, height = 10, width = 10, dpi= 300, bg='white')
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters = F){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
get_transporters_and_reactions <- function(genes_entrez){
reactions    <- get_functional_annots(genes_entrez, transporters = F)
transporters <- get_functional_annots(genes_entrez, transporters = T)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
return(transporters_and_reactions)}
get_two_Entrez_gene_lists <- function(rxns_and_transps_list){
return(list(rxns_and_transps_list$reactions$`Entrez ID`, rxns_and_transps_list$transporters$`Entrez ID`) %>% purrr::set_names(c("rxns", "trns"))
)
}
get_transporters_and_reactions(C_genes) ->  Concentration_rxns_and_transps
get_transporters_and_reactions(F_genes) ->  Flux_rxns_and_transps
get_transporters_and_reactions(CF_genes) -> FluxConcentration_rxns_and_transps
Concentration_rxns_and_transps
Flux_rxns_and_transps
FluxConcentration_rxns_and_transps
setwd("/DeepenData/Repos/geometric_cobra/")
res <- readRDS("./results/genes/RNA_results.RDS")
res %>% rownames() -> all_ENSMUST
#Hs.ensembl       <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Mm.ensembl       <- useMart("ensembl",dataset="mmusculus_gene_ensembl")
#Hs.ensembl       <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Mm.ensembl       <- useMart("ensembl",dataset="mmusculus_gene_ensembl")
temp_1           <- getBM(attributes=c('ensembl_transcript_id','hsapiens_homolog_ensembl_gene'),filters ='ensembl_transcript_id',values =all_ENSMUST, mart = Mm.ensembl)
colnames(temp_1) <- c("mouse_ensembl_transcript_id", "hsapiens_ensembl")
temp_2           <- getBM(attributes=c('ensembl_gene_id','hgnc_symbol','entrezgene_id','entrezgene_description'),
filters ='ensembl_gene_id',values = temp_1$hsapiens_ensembl, mart = Hs.ensembl)
colnames(temp_2)           <- c("hsapiens_ensembl", "hgnc_symbol", "entrezgene_id", 'description')
inner_join(temp_1, temp_2) -> all_gene_codes
res['mouse_ensembl_transcript_id'] <- rownames(res)
inner_join(as.data.frame(res) ,all_gene_codes ) %>% drop_na() %>% arrange(hgnc_symbol) -> annotated_results
annotated_results
library(EnhancedVolcano)
library(magrittr)
get_processed_results <- function(annotated_results, subset){
annotated_results %>% dplyr::filter(entrezgene_id %in% subset) %>% dplyr::select(-c(mouse_ensembl_transcript_id,hsapiens_ensembl,entrezgene_id, description)) %>%
group_by(hgnc_symbol) %>% summarise_all(median,  na.rm = TRUE) ->processed_results
return(processed_results)
}
make_volcano <- function(df_res,labSize, subtitle, pValue_cutoff     = 0.05, FoldChnage_cutoff = .1){plot <- EnhancedVolcano(
df_res,
x = 'log2FoldChange',
y = 'padj',
title = NULL,
subtitle = subtitle,#paste0( names( conjuntos )[[i]], " - ", length( unique(conjuntos[[i]][ conjuntos[[i]] %in% df_res$gene_symbol_sig ]) ), " trancripts" ),
pCutoff = pValue_cutoff,
FCcutoff = FoldChnage_cutoff,
pointSize = 3,
lab = df_res$hgnc_symbol,
#legendPosition = 'right',
labSize = labSize,
boxedLabels = T,
drawConnectors = TRUE,
widthConnectors = 0.2,
colConnectors = 'black',
max.overlaps = 200, #Inf,
)+ ggthemes::theme_few() #+
# coord_flip() +
#theme(legend.position="bottom")
return(plot)}
Concentration_rxns_and_transps
Flux_rxns_and_transps
FluxConcentration_rxns_and_transps
make_volcano_panel <- function(rxns_and_transps, labSize_1 =3, labSize_2=3,  widths = c(1,.5), pValue_cutoff = 0.05, common.legend.pos = 'top'){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['rxns']]) -> Flux_rxns
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['trns']]) -> Flux_trns
volcano_panel <- ggarrange(make_volcano(Flux_rxns, labSize = labSize_1, subtitle = 'Reactions', pValue_cutoff = pValue_cutoff),
make_volcano(Flux_trns, labSize = labSize_2, subtitle = 'Transporters', pValue_cutoff=pValue_cutoff), nrow = 1, widths = widths, common.legend = T, legend = common.legend.pos)
return(volcano_panel)}
C_volcano  <- make_volcano_panel(Concentration_rxns_and_transps, 3,3, c(1,1))
F_volcano  <- make_volcano_panel(Flux_rxns_and_transps, 1.7,2, pValue_cutoff = 0.01, common.legend.pos = 'none')
CF_volcano <- make_volcano_panel(FluxConcentration_rxns_and_transps, 1.7,2, c(1.6,1),pValue_cutoff = 0.01, common.legend.pos = 'none')
F_volcano
CF_volcano
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
volcanos_panel
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
volcanos_panel
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
volcanos_panel
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
volcanos_panel
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
volcanos_panel
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_4_volcano_panel_subplot.png", volcanos_panel, height = 8, width = 10, bg="white", dpi = 400)
get_DEG_table <- function(rxns_and_transps, gene_set){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[[gene_set]]) -> DEG_table
return(DEG_table)
}
get_DEG_table(Concentration_rxns_and_transps, "rxns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_C
get_DEG_table(Concentration_rxns_and_transps, "trns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_trns_C
get_DEG_table(Flux_rxns_and_transps, "rxns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_F
get_DEG_table(Flux_rxns_and_transps, "trns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_trns_F
get_DEG_table(FluxConcentration_rxns_and_transps, "rxns") %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_CF
get_DEG_table(FluxConcentration_rxns_and_transps, "trns") %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_trns_CF
get_DEG_table <- function(rxns_and_transps, gene_set){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[[gene_set]]) -> DEG_table
return(DEG_table)
}
get_DEG_table(Concentration_rxns_and_transps, "rxns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_C
get_DEG_table(Concentration_rxns_and_transps, "trns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_trns_C
get_DEG_table(Flux_rxns_and_transps, "rxns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_F
get_DEG_table(Flux_rxns_and_transps, "trns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_trns_F
get_DEG_table(FluxConcentration_rxns_and_transps, "rxns") %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_CF
get_DEG_table(FluxConcentration_rxns_and_transps, "trns") %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_trns_CF
make_volcano_panel <- function(rxns_and_transps, labSize_1 =3, labSize_2=3,  widths = c(1,.5), pValue_cutoff = 0.05, common.legend.pos = 'top'){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['rxns']]) -> Flux_rxns
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['trns']]) -> Flux_trns
volcano_panel <- ggarrange(make_volcano(Flux_rxns, labSize = labSize_1, subtitle = 'Reactions', pValue_cutoff = pValue_cutoff),
make_volcano(Flux_trns, labSize = labSize_2, subtitle = 'Transporters', pValue_cutoff=pValue_cutoff), nrow = 1, widths = widths, common.legend = T, legend = common.legend.pos)
return(volcano_panel)}
C_volcano  <- make_volcano_panel(Concentration_rxns_and_transps, 3,3, c(1,1), pValue_cutoff     = 0.05)
F_volcano  <- make_volcano_panel(Flux_rxns_and_transps, 1.7,2, pValue_cutoff = 0.01, common.legend.pos = 'none')
CF_volcano <- make_volcano_panel(FluxConcentration_rxns_and_transps, 1.7,2, c(1.6,1),pValue_cutoff = 0.01, common.legend.pos = 'none')
make_volcano_panel <- function(rxns_and_transps, labSize_1 =3, labSize_2=3,  widths = c(1,.5), pValue_cutoff = 0.05, common.legend.pos = 'top'){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['rxns']]) -> Flux_rxns
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['trns']]) -> Flux_trns
volcano_panel <- ggarrange(make_volcano(Flux_rxns, labSize = labSize_1, subtitle = 'Reactions', pValue_cutoff = pValue_cutoff),
make_volcano(Flux_trns, labSize = labSize_2, subtitle = 'Transporters', pValue_cutoff=pValue_cutoff), nrow = 1, widths = widths, common.legend = T, legend = common.legend.pos)
return(volcano_panel)}
C_volcano  <- make_volcano_panel(Concentration_rxns_and_transps, 3,3, c(1,1),     pValue_cutoff    = 0.05)
F_volcano  <- make_volcano_panel(Flux_rxns_and_transps, 1.7,2,                      pValue_cutoff  = 0.01, common.legend.pos = 'none')
CF_volcano <- make_volcano_panel(FluxConcentration_rxns_and_transps, 1.7,2, c(1.6,1),pValue_cutoff = 0.01, common.legend.pos = 'none')
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_4_volcano_panel_subplot.png", volcanos_panel, height = 8, width = 10, bg="white", dpi = 400)
get_DEG_table <- function(rxns_and_transps, gene_set){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[[gene_set]]) -> DEG_table
return(DEG_table)
}
get_DEG_table(Concentration_rxns_and_transps, "rxns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_C
get_DEG_table(Concentration_rxns_and_transps, "trns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_trns_C
get_DEG_table(Flux_rxns_and_transps, "rxns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_F
get_DEG_table(Flux_rxns_and_transps, "trns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_trns_F
get_DEG_table(FluxConcentration_rxns_and_transps, "rxns") %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_CF
get_DEG_table(FluxConcentration_rxns_and_transps, "trns") %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_trns_CF
library(ggvenn)
l <- list(
DEGs_C = c(DEGs_rxns_C$hgnc_symbol, DEGs_trns_C$hgnc_symbol),
DEGs_F =  c(DEGs_rxns_F$hgnc_symbol, DEGs_trns_F$hgnc_symbol),
DEGs_CF = c(DEGs_rxns_CF$hgnc_symbol, DEGs_trns_CF$hgnc_symbol))
ggvenn(l,  stroke_size = 0.4,  set_name_size = 2, text_size = 3.5, show_elements = F) -> supplemental_venn_diagram
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplemental_venn_diagram.png", supplemental_venn_diagram, height = 4, width = 4, bg="white", dpi = 400)
supplemental_venn_diagram
DEGs_C = c(DEGs_rxns_C$hgnc_symbol, DEGs_trns_C$hgnc_symbol)
DEGs_F =  c(DEGs_rxns_F$hgnc_symbol, DEGs_trns_F$hgnc_symbol)
DEGs_CF = c(DEGs_rxns_CF$hgnc_symbol, DEGs_trns_CF$hgnc_symbol)
all_genes <- c(DEGs_C, DEGs_F, DEGs_CF) %>% unique()
get_gene_row <- function(a_gene){
gene_row <-  c("","","")
if(a_gene %in% DEGs_C){gene_row[1] <-  "\U1F5F8"}
if(a_gene %in% DEGs_F){gene_row[2] <-  "\U1F5F8"}
if(a_gene %in% DEGs_CF){gene_row[3] <-  "\U1F5F8"}
return(gene_row)
}
#a_gene    <- 'UYURT'
my_rows <- tibble()
for (a_gene in all_genes){
a_row <- get_gene_row(a_gene)
my_rows <- rbind(my_rows, a_row)
}
names(my_rows) <- c("Conc","Flux","Conc+Flux")
my_rows["hgnc_symbol"] <- all_genes
inner_join(my_rows,
annotated_results[c("hgnc_symbol", "entrezgene_id", "description")] %>% unique
)%>% dplyr::group_by(Conc, Flux) %>% arrange(desc("Conc+Flux"), .by_group=T) ->annotated_gene_groups
first_part <- ceiling(nrow(annotated_gene_groups)/2)
annotated_gene_groups[1:first_part,]                                -> annotated_gene_groups_1
annotated_gene_groups[(first_part+1):nrow(annotated_gene_groups),]  -> annotated_gene_groups_2
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = -.03)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 11.4, width = 10.5, bg="white", dpi = 400)
base_size =8
main.title <- "(Continued from previous page)"
annotated_gene_groups_2 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 8, hjust = -.03) -> supplementary_gene_table_1_second
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_second.png", supplementary_gene_table_1_second, height = 11.2, width = 10.5, bg="white", dpi = 400)
volcanos_panel
annotated_gene_groups_1
supplementary_gene_table_1_first
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = -.03)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 11.4, width = 10.5, bg="white", dpi = 400)
supplementary_gene_table_1_first
base_size =8
main.title <- "(Continued from previous page)"
annotated_gene_groups_2 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 8, hjust = -.03) -> supplementary_gene_table_1_second
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_second.png", supplementary_gene_table_1_second, height = 11.2, width = 10.5, bg="white", dpi = 400)
supplementary_gene_table_1_second
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_4_volcano_panel_subplot.png", volcanos_panel, height = 8, width = 10, bg="white", dpi = 400)
volcanos_panel
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.6,1,1), labels = c("b","d","f"))
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_4_volcano_panel_subplot.png", volcanos_panel, height = 10, width = 10, bg="white", dpi = 400)
library(ggvenn)
l <- list(
DEGs_C = c(DEGs_rxns_C$hgnc_symbol, DEGs_trns_C$hgnc_symbol),
DEGs_F =  c(DEGs_rxns_F$hgnc_symbol, DEGs_trns_F$hgnc_symbol),
DEGs_CF = c(DEGs_rxns_CF$hgnc_symbol, DEGs_trns_CF$hgnc_symbol))
ggvenn(l,  stroke_size = 0.4,  set_name_size = 2, text_size = 3.5, show_elements = F) -> supplemental_venn_diagram
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplemental_venn_diagram.png", supplemental_venn_diagram, height = 4, width = 4, bg="white", dpi = 400)
supplemental_venn_diagram
DEGs_C = c(DEGs_rxns_C$hgnc_symbol, DEGs_trns_C$hgnc_symbol)
DEGs_F =  c(DEGs_rxns_F$hgnc_symbol, DEGs_trns_F$hgnc_symbol)
DEGs_CF = c(DEGs_rxns_CF$hgnc_symbol, DEGs_trns_CF$hgnc_symbol)
all_genes <- c(DEGs_C, DEGs_F, DEGs_CF) %>% unique()
get_gene_row <- function(a_gene){
gene_row <-  c("","","")
if(a_gene %in% DEGs_C){gene_row[1] <-  "\U1F5F8"}
if(a_gene %in% DEGs_F){gene_row[2] <-  "\U1F5F8"}
if(a_gene %in% DEGs_CF){gene_row[3] <-  "\U1F5F8"}
return(gene_row)
}
#a_gene    <- 'UYURT'
my_rows <- tibble()
for (a_gene in all_genes){
a_row <- get_gene_row(a_gene)
my_rows <- rbind(my_rows, a_row)
}
names(my_rows) <- c("Conc","Flux","Conc+Flux")
my_rows["hgnc_symbol"] <- all_genes
inner_join(my_rows,
annotated_results[c("hgnc_symbol", "entrezgene_id", "description")] %>% unique
)%>% dplyr::group_by(Conc, Flux) %>% arrange(desc("Conc+Flux"), .by_group=T) ->annotated_gene_groups
first_part <- ceiling(nrow(annotated_gene_groups)/2)
annotated_gene_groups[1:first_part,]                                -> annotated_gene_groups_1
annotated_gene_groups[(first_part+1):nrow(annotated_gene_groups),]  -> annotated_gene_groups_2
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = -.03)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 11.4, width = 10.5, bg="white", dpi = 400)
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = -.03)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 8.4, width = 10.5, bg="white", dpi = 400)
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = -.03)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 7.4, width = 10.5, bg="white", dpi = 400)
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = -.03)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 7.7, width = 10.5, bg="white", dpi = 400)
base_size =8
main.title <- "(Continued from previous page)"
annotated_gene_groups_2 %>% ggtexttable(theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 8, hjust = -.03) -> supplementary_gene_table_1_second
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_second.png", supplementary_gene_table_1_second, height = 7.7, width = 10.5, bg="white", dpi = 400)
get_Biological_Processes <- function(DEGs){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description','namespace_1003','name_1006', 'definition_1006'),filters ='hgnc_symbol',values =DEGs$hgnc_symbol, mart = Hs.ensembl)
temp %>% dplyr::filter(namespace_1003 == "biological_process") -> df
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, entrezgene_id, name_1006)) %>% nest_by(hgnc_symbol, entrezgene_description, entrezgene_id) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Processes' = data) -> df_annot
return(df_annot)
}
Biological_Processes <- map(list(DEGs_rxns_C, DEGs_trns_C, DEGs_rxns_F, DEGs_trns_F, DEGs_rxns_CF, DEGs_trns_CF),get_Biological_Processes)
library(openxlsx)
setwd("/DeepenData/Repos/geometric_cobra")
xlsx_path <- "./results/genes/Supplementary_Table_1_Differential_expressed_genes.xlsx"
openxlsx::write.xlsx(Biological_Processes[[1]], file = xlsx_path,  sheetName = "s1_reactions_from_concentration", append = T)
add_new_sheet <- function(xlsx_path, sheet_name, data_to_sheet ){
wb <- loadWorkbook(xlsx_path)
addWorksheet(wb,sheet_name)
writeData(wb,sheet_name,data_to_sheet)
saveWorkbook(wb,xlsx_path,overwrite = TRUE)}
add_new_sheet(xlsx_path,"s2_transport_from_concentration",Biological_Processes[[2]])
add_new_sheet(xlsx_path,"s3_reactions_from_flux",Biological_Processes[[3]])
add_new_sheet(xlsx_path,"s4_transport_from_flux",Biological_Processes[[4]])
add_new_sheet(xlsx_path,"s5_reactions_from_conc_and_flux",Biological_Processes[[5]])
add_new_sheet(xlsx_path,"s6_transport_from_conc_and_flux",Biological_Processes[[6]])
library(openxlsx)
setwd("/DeepenData/Repos/geometric_cobra")
xlsx_path <- "./results/genes/Supplementary_Table_1_Differential_expressed_genes.xlsx"
openxlsx::write.xlsx(Biological_Processes[[1]], file = xlsx_path,  sheetName = "s1_reactions_from_concentration", append = T)
add_new_sheet <- function(xlsx_path, sheet_name, data_to_sheet ){
wb <- loadWorkbook(xlsx_path)
addWorksheet(wb,sheet_name)
writeData(wb,sheet_name,data_to_sheet)
saveWorkbook(wb,xlsx_path,overwrite = TRUE)}
add_new_sheet(xlsx_path,"s2_transport_from_concentration",Biological_Processes[[2]])
add_new_sheet(xlsx_path,"s3_reactions_from_flux",Biological_Processes[[3]])
add_new_sheet(xlsx_path,"s4_transport_from_flux",Biological_Processes[[4]])
add_new_sheet(xlsx_path,"s5_reactions_from_conc_and_flux",Biological_Processes[[5]])
add_new_sheet(xlsx_path,"s6_transport_from_conc_and_flux",Biological_Processes[[6]])
setwd("~/geometric_cobra")
setwd("/DeepenData/Repos/geometric_cobra")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters = F){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
get_transporters_and_reactions <- function(genes_entrez){
reactions    <- get_functional_annots(genes_entrez, transporters = F)
transporters <- get_functional_annots(genes_entrez, transporters = T)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
return(transporters_and_reactions)}
get_two_Entrez_gene_lists <- function(rxns_and_transps_list){
return(list(rxns_and_transps_list$reactions$`Entrez ID`, rxns_and_transps_list$transporters$`Entrez ID`) %>% purrr::set_names(c("rxns", "trns"))
)
}
get_transporters_and_reactions(C_genes) ->  Concentration_rxns_and_transps
get_transporters_and_reactions(F_genes) ->  Flux_rxns_and_transps
get_transporters_and_reactions(CF_genes) -> FluxConcentration_rxns_and_transps
setwd("/DeepenData/Repos/geometric_cobra/")
res <- readRDS("./results/genes/RNA_results.RDS")
res %>% rownames() -> all_ENSMUST
#Hs.ensembl       <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Mm.ensembl       <- useMart("ensembl",dataset="mmusculus_gene_ensembl")
temp_1           <- getBM(attributes=c('ensembl_transcript_id','hsapiens_homolog_ensembl_gene'),filters ='ensembl_transcript_id',values =all_ENSMUST, mart = Mm.ensembl)
colnames(temp_1) <- c("mouse_ensembl_transcript_id", "hsapiens_ensembl")
temp_2           <- getBM(attributes=c('ensembl_gene_id','hgnc_symbol','entrezgene_id','entrezgene_description'),
filters ='ensembl_gene_id',values = temp_1$hsapiens_ensembl, mart = Hs.ensembl)
colnames(temp_2)           <- c("hsapiens_ensembl", "hgnc_symbol", "entrezgene_id", 'description')
inner_join(temp_1, temp_2) -> all_gene_codes
res['mouse_ensembl_transcript_id'] <- rownames(res)
inner_join(as.data.frame(res) ,all_gene_codes ) %>% drop_na() %>% arrange(hgnc_symbol) -> annotated_results
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("PDPR"))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("nitric oxide synthase"))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("GCPC1"))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("GCPC1"))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(description, regex("Glucose"))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(description, regex("glucose"))) %>% filter(padj < 0.5)
stringr::regex()
stringr::regex()?
cd
?stringr::regex()
annotated_results %>%  filter(str_detect(description, regex("glucose", ignore_case=T))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(description, regex("Glucose", ignore_case=T))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(description, regex("Glucose", ignore_case=T))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(description, regex("Glucose", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("G6PC1"))) %>% filter(padj < 0.5)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("G6PC1"))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("lactato", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("lactate", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("LDHD"))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("MPC2"))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("MPC2"))) %>% filter(padj < 0.01)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("MPC2"))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("keto", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("keto acid", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("hydroxy", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("hydroxybutyrate", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("hydroxybutyrate dehy", ignore_case=T))) %>% filter(padj < 0.05)
annotated_results %>%  filter(str_detect(description, regex("hydroxybutyrate dehy", ignore_case=T))) %>% filter(padj < 0.01)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("HMGCR", ignore_case=T))) %>% filter(padj < 0.05)
