df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) #%>% mutate(data = unlist(data))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) -> df2#%>% mutate(data = unlist(data))
df2
df2$data
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest(hgnc_symbol) -> df2#%>% mutate(data = unlist(data))
df2$data
df2$data[[1]]
df2
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) -> df2#%>% mutate(data = unlist(data))
df2$data[[1]]
df2
df2$data[[1]]
df2
df2$data[[1]]
df2$data[[1]][[1]]
as.vector(df2$data[[1]])
as.character(df2$data[[1]])
as.string(df2$data[[1]])
as.array(df2$data[[1]])
as_vector(df2$data[[1]])
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) -%>% mutate(data = as_vector(data))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = as_vector(data))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = as.vector(data))
as.vector(df2$data[[1]])
unlist(as.vector(df2$data[[1]]))
pluck(as.vector(df2$data[[1]]))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = as.vector(data)[[1]])
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = as.vector(data))
as.character(as.vector(df2$data[[1]]))
as.vector(as.vector(df2$data[[1]]))
purrr::as_vector(as.vector(df2$data[[1]]))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = as_vector(data))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = as.vector(data))
purrr::unlist(as.vector(df2$data[[1]]))
(as.vector(df2$data[[1]]))
c(as.vector(df2$data[[1]]))
flatten(as.vector(df2$data[[1]]))
flatten(flatten(df2$data[[1]]))
flatten(df2$data[[1]])
flatten_chr(df2$data[[1]])
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = flatten_chr(data))
flatten_chr(df2$data[[1]])
paste0(flatten_chr(df2$data[[1]]))
paste(flatten_chr(df2$data[[1]]))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data = purrr::flatten_chr(data))
c(flatten_chr(df2$data[[1]]))
paste0(flatten_chr(df2$data[[1]]), collapse = ', ')
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', '))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '- '))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; '))
df
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; '))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>% rename(data = bio)
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>% rename('Biological process' = data)
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>% rename(BP = data)
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; '))
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>%dplyr::rename(BP = data)
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>%dplyr::rename('BP' = data)
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>%dplyr::rename('Biological Process' = data)
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = '; ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
setwd("/DeepenData/Repos/Neuron-Astrocyte-Metabolism-2023")
write_csv(df_annot, "all_hubs_BP_annotated.csv")
df %>% dplyr::select(c(hgnc_symbol, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
setwd("/DeepenData/Repos/Neuron-Astrocyte-Metabolism-2023")
write_csv(df_annot, "all_hubs_BP_annotated.csv")
df
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, name_1006)) %>% nest_by(c(hgnc_symbol, entrezgene_description)) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, name_1006)) %>% nest_by(c(hgnc_symbol)) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
df_annot
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, name_1006)) %>% nest_by((hgnc_symbol)) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
df_annot
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, name_1006)) %>% nest_by(hgnc_symbol) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
df_annot
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, name_1006)) %>% nest_by(hgnc_symbol, entrezgene_description) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
df_annot
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, entrezgene_id, name_1006)) %>% nest_by(hgnc_symbol, entrezgene_description, entrezgene_id) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Process' = data) -> df_annot
df_annot
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, entrezgene_id, name_1006)) %>% nest_by(hgnc_symbol, entrezgene_description, entrezgene_id) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Processes' = data) -> df_annot
df_annot
setwd("/DeepenData/Repos/Neuron-Astrocyte-Metabolism-2023")
write_csv(df_annot, "all_hubs_BP_annotated.csv")
library(arrow)
library(tidyverse)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Mm.ensembl <- useMart("ensembl",dataset="mmusculus_gene_ensembl")
searchAttributes(mart = Mm.ensembl, pattern = "hsa")
searchAttributes(mart = Hs.ensembl, pattern = "descri")
setwd("/DeepenData/Repos/geometric_cobra/deprecated")
res <- readRDS("./MM/RNA_results.RDS")
res %>% rownames() -> all_ENSMUST
#c('ENSMUST00000228829','ENSMUST00000228611','ENSMUST00000096990') -> transcripts
temp_1 <- getBM(attributes=c('ensembl_transcript_id','hsapiens_homolog_ensembl_gene'),filters ='ensembl_transcript_id',values =all_ENSMUST, mart = Mm.ensembl)
colnames(temp_1)<-c("mouse_ensembl_transcript_id", "hsapiens_ensembl")
#searchAttributes(mart = Hs.ensembl, pattern = "entrez")
temp_2 <- getBM(attributes=c('ensembl_gene_id','hgnc_symbol','entrezgene_id','entrezgene_description'),
filters ='ensembl_gene_id',values = temp_1$hsapiens_ensembl, mart = Hs.ensembl)
colnames(temp_2) <- c("hsapiens_ensembl", "hgnc_symbol", "entrezgene_id", 'description')
inner_join(temp_1, temp_2) -> all_gene_codes
res['mouse_ensembl_transcript_id'] <- rownames(res)
inner_join(as.data.frame(res) ,all_gene_codes ) %>% drop_na() %>% arrange(hgnc_symbol) -> annotated_results
setwd("/DeepenData/Repos/geometric_cobra/deprecated")
gs_C  <- read.csv2("./results/dataframes/entrez_IDs_C.csv")[,1]  %>% as.character #%>% entrez_to_gene
gs_F  <- read.csv2("./results/dataframes/entrez_IDs_F.csv")[,1]  %>% as.character #%>% entrez_to_gene
gs_CF <- read.csv2("./results/dataframes/entrez_IDs_CF.csv")[,1] %>% as.character #%>% entrez_to_gene
library(EnhancedVolcano)
library(magrittr)
get_processed_results <- function(annotated_results, subset){
annotated_results %>% dplyr::filter(entrezgene_id %in% subset) %>% dplyr::select(-c(mouse_ensembl_transcript_id,hsapiens_ensembl,entrezgene_id, description)) %>%
group_by(hgnc_symbol) %>% summarise_all(median,  na.rm = TRUE) ->processed_results
return(processed_results)
}
get_processed_results(annotated_results, gs_C) -> Concentration
get_processed_results(annotated_results, gs_F) -> Flux
get_processed_results(annotated_results, gs_CF) -> C_and_F
pValue_cutoff     = 0.05
FoldChnage_cutoff = .1
df_res <- Flux # Concentration, Flux, C_and_F
plot <- EnhancedVolcano(
df_res,
x = 'log2FoldChange',
y = 'padj',
title = NULL,
subtitle = NULL,#paste0( names( conjuntos )[[i]], " - ", length( unique(conjuntos[[i]][ conjuntos[[i]] %in% df_res$gene_symbol_sig ]) ), " trancripts" ),
pCutoff = pValue_cutoff,
FCcutoff = FoldChnage_cutoff,
pointSize = 1,
lab = df_res$hgnc_symbol,
labSize = 2,
boxedLabels = F,
drawConnectors = TRUE,
widthConnectors = 0.2,
colConnectors = 'black',
max.overlaps = 100, #Inf,
) + ggthemes::theme_few() +
# coord_flip() +
theme(legend.position="bottom")
plot
DEGs_table <- function(case){
case %>% dplyr::filter(padj < pValue_cutoff & abs(log2FoldChange) > FoldChnage_cutoff) %>% dplyr::select(c(hgnc_symbol, log2FoldChange, padj)) -> significant_genes
return(
inner_join(annotated_results[c("hgnc_symbol", "description")] %>% unique(), significant_genes) %>% arrange(log2FoldChange))
}
DEGs_table(Concentration)
DEGs_table(Flux)
DEGs_table(C_and_F)
library(tidyverse)
library(magrittr)
library(ggbeeswarm)
library(ggpubr)
setwd("/DeepenData/Repos/geometric_cobra")
metabolites_outliers_imputed           <- arrow::read_parquet("./processed_data/metabolites_outliers_removed_and_imputed.parquet.gzip") %>% as_tibble()%>% mutate(Group = as.factor(Group))  %>%
rename("C4OH+C3DC" = C4OH.C3DC, "C5.OH+C4DC" = C5.OH.C4DC, "Leu+Ile" = Leu.Ile)
table(
metabolites_outliers_imputed$Group
)
color_1 <- "dodgerblue2"
color_2 <- "darkorange"
get_concentration_subplot <- function(input_df, vars_subset, logscale =F, legend.position = 'none', y_label = F, angle = 45, swarm_width = .15, dodge.width = 1, point_size = .9, size_ticks_size = 9, axis_title_size = 12, gray = F){
Control_df <-  input_df %>% dplyr::filter(Group == "Control")  %>%  dplyr::slice_sample(n=200)
PKU_df <-  input_df %>% dplyr::filter(Group == "PKU")
subsample <- rbind(PKU_df, Control_df)
subsample %>% dplyr::select(c(vars_subset, 'Group')) %>% pivot_longer(-Group) -> df
df %>%                                 ggplot(aes(x= reorder(name, -value), y=value, color=Group)) -> P0
if(gray){P0 <- P0  + theme_gray() }else{ P0 <- P0  + theme_minimal()}
P0 + geom_boxplot(width = .15, outlier.shape = NA)    +
geom_point(position=position_quasirandom(dodge.width = dodge.width, width = swarm_width), alpha = .8, size =point_size) +
scale_colour_manual(values = c(color_1 ,color_2))  +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle = angle, vjust = 0, hjust=.5),axis.text = element_text(size = size_ticks_size),axis.title = element_text(size = axis_title_size),
legend.position=legend.position,
legend.text = element_text(size=7))-> p
if(logscale){p <-p  + coord_trans( y="log2")}
if(y_label){p <-p   + ylab(expression(mu*"M"))}else{p <-p   +theme(axis.title.y = element_blank())}
return(p )
}
metabolites_outliers_imputed     %>%
summarise(across(where(is.double),  ~ max(.x, na.rm = TRUE))) %>%
t %>% as.data.frame() %>% arrange(desc(V1)) %>% rownames() -> sorted_vars
setdiff(sorted_vars, c("Phe")) -> v
vars_intervals <- list()
j = 0
for (i in seq(from = 1, to = 44, by = 11)){
j = j +1
vars_intervals[[j]] <-v[i:(i+10)]
if( (i+7) > 44 ){ vars_intervals[[j]] <-v[i:(44)]}
}
#vars_intervals[[5]] <- c(vars_intervals[[5]], vars_intervals[[6]])
# vars_intervals[[6]] <- NULL
get_concentration_subplot(metabolites_outliers_imputed, 'Phe', T, 'top',  y_label = T,  angle=0, gray = T) -> p
p + geom_hline(yintercept=c(35,120, 360), linetype="dashed",
color = c("black","black","red"), size=.51)+ scale_y_continuous(breaks=c(35,120,360, 1000, 2300)) +
theme(legend.title=element_blank()) -> Phe_
Phe_  + stat_compare_means(label = "p.signif", method = 'wilcox.test') -> Phe_
#Phe_subplot <- ggarrange(Phe_ , labels = 'a' )
get_concentration_subplot(metabolites_outliers_imputed, 'Tyr', T, 'top',  y_label = F,  angle=0, gray = T) -> p
p + # geom_hline(yintercept=c(20,50, 150), linetype="dashed",                 color = c("azure4","azure4","azure4"), size=.51)+
scale_y_continuous(breaks=c(20,50,150)) +
theme(legend.title=element_blank()) -> Tyr_
Tyr_  + stat_compare_means(label = "p.signif", method = 'wilcox.test') -> Tyr_
ggarrange(Phe_, Tyr_, common.legend = T, widths = c(1.06,1),labels = 'a' ) -> Phe_subplot
subplot_1 <- get_concentration_subplot(metabolites_outliers_imputed, vars_intervals[[1]][1:3], angle=0,  y_label = T, swarm_width = .08, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8) + stat_compare_means(label = "p.signif", method = 'wilcox.test', vjust = 1.5,  size = 3)
subplot_2 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[1]][c(4,5,6,8,9)], angle=0, swarm_width = .1, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size = 8)+ stat_compare_means(label = "p.signif", method = 'wilcox.test', vjust = 1.5,  size = 3) + ylim(c(0,250))
subplot_b <- ggarrange(subplot_1, subplot_2,  nrow = 1, widths = c(1,1.6), labels = 'b', hjust = 0)
subplot_1 <- get_concentration_subplot(metabolites_outliers_imputed, c(vars_intervals[[1]][10:11], vars_intervals[[2]][1:3]), angle=0,  y_label = T, swarm_width = .08, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
#subplot_2 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[2]][1:3], angle=0, swarm_width = .1, dodge.width = .82, point_size = .2, size_ticks_size = 7, axis_title_size= 8)
subplot_3 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[2]][4:5], angle=0, swarm_width = .1, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label = "p.signif", method = 'wilcox.test', vjust = 1.5,  size = 3)
subplot_4 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[2]][6:7], angle=0, swarm_width = .1, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label = "p.signif", method = 'wilcox.test', vjust = 1.5,  size = 3)
subplot_c <- ggarrange(subplot_1, subplot_3, subplot_4,nrow = 1, widths = c(3,1,1), labels = 'c', hjust = 0)
subplot_c
subplot_1 <- get_concentration_subplot(metabolites_outliers_imputed, vars_intervals[[2]][8:9], angle=0,  y_label = T, swarm_width = .08, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
subplot_2 <- get_concentration_subplot(metabolites_outliers_imputed,c(vars_intervals[[2]][10:11], vars_intervals[[3]][1:3], vars_intervals[[3]][4:6]), angle=0, swarm_width = .1, dodge.width = .82, point_size = .2, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
#subplot_3 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[3]][1:3], angle=0, swarm_width = .1, dodge.width = .82, point_size = .2, size_ticks_size = 7, axis_title_size= 8)
subplot_4 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[3]][4:6], angle=0, swarm_width = .1, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test',  size = 3)
subplot_d <- ggarrange(subplot_1, subplot_2,nrow = 1, widths = c(1,3), labels = 'd', hjust = 0)
subplot_d
#subplot_1 <- get_concentration_subplot(metabolites_outliers_imputed, vars_intervals[[3]][7:8], angle=0,  y_label = T, swarm_width = .08, dodge.width = .82, point_size = .2, size_ticks_size = 7, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5)
subplot_2 <- get_concentration_subplot(metabolites_outliers_imputed,c(vars_intervals[[3]][7:11], vars_intervals[[4]][1:3]),y_label = T , angle=0, swarm_width = .1, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
#subplot_3 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[4]][1:4], angle=0, swarm_width = .1, dodge.width = .82, point_size = .2, size_ticks_size = 7, axis_title_size= 8)
subplot_e <- ggarrange(subplot_2,nrow = 1, widths = c(1), labels = 'e', hjust = 0)
subplot_e
subplot_1 <- get_concentration_subplot(metabolites_outliers_imputed, vars_intervals[[4]][4:6], angle=0,  y_label = T, swarm_width = .08, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
subplot_2 <- get_concentration_subplot(metabolites_outliers_imputed,vars_intervals[[4]][7:10], angle=0, swarm_width = .1, dodge.width = .82, point_size = .1, size_ticks_size = 5, axis_title_size= 8)+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
subplot_f <- ggarrange(subplot_1, subplot_2,nrow = 1, widths = c(1,1.3), labels = 'f', hjust = 0)
subplot_f
metabolites_panel<- ggarrange(subplot_b, subplot_c, subplot_d, subplot_e, subplot_f, ncol = 1)
metabolites_concentration_panel <- ggarrange(Phe_subplot, metabolites_panel, nrow = 1, widths = c(1.5,3))
metabolites_concentration_panel
make_umap <- function(data, legend.position){
UMAPM <- umap::umap(data  %>% select_if(is.numeric) %>%
as.matrix(), n_neighbors = 20, scale = T, n_threads = 20, fast_sgd = F, metric = 'cosine', spread = 10)
p <- ggplot(as_tibble(UMAPM$layout), aes(V1, V2, colour= data[["Group"]]))
UMAP_reduction <-  p + geom_point(size= .15) + xlab('UMAP dimension 1') + ylab('UMAP dimension 2')+
scale_colour_manual(values =  c(alpha(c( "dodgerblue2"), .4), alpha(c("darkorange"), .8)))+
theme(legend.position=legend.position, text = element_text(size = 9),
axis.title.y = element_text(size = 7),  axis.title.x = element_text(size = 7))   +                                                                                                           guides(color = guide_legend(override.aes = list(size = 3) ) )+
guides(color = guide_legend(title = "Group", override.aes = list(size = 3) ))
return(UMAP_reduction)}
metabolites_outliers_imputed %>% make_umap('none') -> umap_plot_1
setwd("/DeepenData/Repos/geometric_cobra")
augmented_metabolite_data <- arrow::read_parquet("./processed_data/augmented_balanced_metabolite_data.parquet.gzip")
augmented_metabolite_data %>%
rename( Group = label) %>% mutate(Group = if_else(Group == 1,'PKU','Control')) %>% make_umap('none')-> umap_plot_2
umap_panel <- ggarrange(umap_plot_1, umap_plot_2, nrow = 2, labels = c("g",""), hjust = .34, vjust = .9)
library(magrittr)
library(tidyverse)
setwd("/DeepenData/Repos/geometric_cobra")
flux_samples_CONTROL_10_000 <- arrow::read_parquet("./results/fluxes/CLEANED_flux_samples_CONTROL_20_000.parquet.gzip") #%>% remove_outliers_patients(0.02, .98)
flux_samples_PKU_10_000 <- arrow::read_parquet("./results/fluxes/CLEANED_flux_samples_PKU_20_000.parquet.gzip")#%>% remove_outliers_patients(0.02, .98)
flux_samples_CONTROL_10_000['Group'] <- 'Control'
flux_samples_PKU_10_000['Group']     <- 'PKU'
all_flux_samples                     <- rbind(flux_samples_PKU_10_000, flux_samples_CONTROL_10_000) %>% rename( PAH = r0399)
print(all_flux_samples %>% dim)
all_flux_samples %>% sample_n(1000) -> flux_subsample
table(flux_subsample$Group)
PHE  <- 'PAH'
#'HMR_6729', 'HMR_6755'
library(tidyverse)
library(magrittr)
library(ggbeeswarm)
library(ggpubr)
color_1 <- "dodgerblue2"
color_2 <- "darkorange"
get_flux_plot <- function(flux_set, a, b, dodge.width, swarm_width, point_size, axis_title_size, size_ticks_size, angle, legend.position,  y_label = F, gray = F){
flux_subsample %>% dplyr::select(c(flux_set, 'Group'))    %>%
summarise(across(where(is.double),  ~ max(.x, na.rm = TRUE))) %>%
t %>% as.data.frame() %>% arrange(desc(V1)) %>% rownames() -> sorted_vars
setdiff(sorted_vars, c("Phe")) -> v
flux_subsample %>% dplyr::select(c(v[a:b], 'Group')) %>% pivot_longer(-Group) -> df
df %>%                           ggplot(aes(x= reorder(name, -value), y=value, color=Group)) -> P0
if(gray){P0 <- P0  + theme_gray() }else{ P0 <- P0  + theme_minimal()}#+ theme_minimal() +
P0 + geom_boxplot(width = .15, outlier.shape = NA) + #theme(axis.title.x = element_blank(),axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
geom_point(position=position_quasirandom(dodge.width = dodge.width, width = swarm_width), alpha = .8, size =point_size)+
scale_colour_manual(values = c(color_1 ,color_2))+
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle = angle, vjust = 0, hjust=.5),axis.text = element_text(size = size_ticks_size),axis.title = element_text(size = axis_title_size),
legend.position=legend.position,
legend.text = element_text(size=8)) -> p
#if(y_label){p <-p   + ylab(expression("Flux"))}else{p <-p   +theme(axis.title.y = element_blank())}
return(p)
}
flux_1 <- get_flux_plot(flux_set = PHE, a = 1,b = 1,dodge.width = 1.7,swarm_width = .25,point_size  = .1,axis_title_size = 9,size_ticks_size =9,angle =45,legend.position = "none", y_label = T, gray = T) +
xlab(("")) + ylab(("Flux (%)")) + coord_trans( y="log2") + geom_hline(yintercept=c(2, 100), linetype="dashed",
color = c("red", "black"), size=.51) + scale_y_continuous(breaks=c(2,100)) + stat_compare_means(label = "p.signif", method = 'wilcox.test', vjust = 0)
ggarrange(flux_1, nrow = 1, widths = c(1), labels = 'h') -> PAH_subplot
ggarrange(umap_panel, PAH_subplot, ncol = 2, widths = c(1.5,1)) -> umap_PAH_panel
THBP <- c("DHPR", "DHPR2", "THBPT4ACAMDASE", "r0403", "r0398", 'DHPR2', 'PPOR', 'PTHPS', 'THBPT4ACAMDASE', 'r0403', 'r0545', 'r0547', 'PHLAC', 'DHPR', 'r0398',  'HMR_6770',  'HMR_6854', 'HMR_6874')
flux_1 <- get_flux_plot(flux_set = THBP, a = 1,b = 4,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 9,size_ticks_size =5,angle =0,legend.position = "none", y_label = T) + ylab(("Flux"))+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
flux_2 <-get_flux_plot(flux_set = THBP, a = 7,b = 10,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 1,size_ticks_size =5,angle =0,legend.position = "none", y_label = T)  + ylim(c(0,5))+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
flux_3 <-get_flux_plot(flux_set = THBP, a = 11,b = 13,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 1,size_ticks_size =5,angle =0,legend.position = "none", y_label = T)  + stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5,  size = 3)
ggarrange(flux_1, flux_2, flux_3, nrow = 1, widths = c(1, 1.6), labels = "i") -> THBP_fluxes
THBP_fluxes
ACYL <- c(  'C181OHc', 'C40CPT1', 'FAOXC3DC',
'CSNATr', 'C30CPT1', 'C140CPT1', 'C141CPT1', 'FAOXC12DCc', 'C121CPT1', 'ADRNCPT1',  'C160CPT1', 'C161CPT1',
'C180CPT1', 'C181CPT1', 'C204CPT1', 'C226CPT1', 'CLPNDCPT1', 'DMNONCOACRNCPT1', 'DMNONCOACRNCPT1', 'EICOSTETCPT1', 'OCTDECCPT1', 'OCD11COACPT1', 'C81CPT1', 'C80CPT1', 'C60CPT1', 'C51CPT1')#, )#, 'DMNONCOACRNCPT1')#, 'EICOSTETCPT1'),'FAOXC14C12m', 'C50CPT1''ARACHCPT1','C161CPT12', 'FAOXC14C14OHm',
flux_1 <- get_flux_plot(flux_set = ACYL, a = 1, b = 10,dodge.width = 1,swarm_width = .1,point_size  = .01,axis_title_size = 9,size_ticks_size =5,angle =0,legend.position = "none", y_label = T) + ylab(("Flux"))+ stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1,  size = 3)
#flux_2 <-get_flux_plot(flux_set = ACYL, a = 14,b = 17,dodge.width = 1,swarm_width = .1,point_size  = .3,axis_title_size = 1,size_ticks_size =7,angle =45,legend.position = "none", y_label = T)  + stat_compare_means(label="p.signif",method='wilcox.test', vjust = 1.5)#+ ylim(c(0,15))
#flux_4 <-get_flux_plot(flux_set = ACYL, a = 13,b = 15,dodge.width = 1,swarm_width = .1,point_size  = .3,axis_title_size = 1,size_ticks_size =5,angle =45,legend.position = "none", y_label = T)  #+ coord_trans( y="log2")
ggarrange(flux_1, nrow = 1, widths = c(3,1), labels = 'j') -> ACYLS_fluxes
ACYLS_fluxes
ggarrange(THBP_fluxes, ACYLS_fluxes, ncol = 1) -> flux_panel
ggarrange(umap_PAH_panel, flux_panel, nrow = 1, widths = c(.5,1)) -> lower_panel
lower_panel
ggarrange(metabolites_concentration_panel, lower_panel, ncol = 1, heights = c(1,.65)) -> metabolome_flux_panel
metabolome_flux_panel
library(tidyverse)
library(magrittr)
library(ggbeeswarm)
library(ggpubr)
setwd("/DeepenData/Repos/geometric_cobra")
#img <- png::readPNG("./results/graphs/for_visualizations/control_concentration.png")
control_concentration.png <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/metabolites_control.png"))
PKU_concentration.png     <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/metabolites_PKU.png"))
control_fluxes.png     <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/flux_control.png"))
PKU_fluxes.png         <- ggplot() + background_image( png::readPNG("./results/graphs/for_visualizations/flux_PKU.png"))
annotate_figure(control_concentration.png, left = 'Metabolite abundance', top = 'Control') -> control_concentration.png
annotate_figure(PKU_concentration.png,  top = 'PKU') -> PKU_concentration.png
ggarrange(control_concentration.png, PKU_concentration.png, nrow = 1, labels = c("k","")) -> left_graphs
annotate_figure(control_fluxes.png, left = 'Flux', top = 'Control') -> control_fluxes.png
annotate_figure(PKU_fluxes.png,  top = 'PKU') -> PKU_fluxes.png
ggarrange(control_fluxes.png, PKU_fluxes.png, nrow = 1, labels = c("l","")) -> right_graphs
ggarrange(left_graphs, right_graphs, nrow = 1) ->  graphs_panel
graphs_panel
#ggarrange(control_concentration.png, PKU_concentration.png, control_fluxes.png, PKU_fluxes.png, nrow = 1, labels = c("k","","l","")) ->  graphs_panel
#graphs_panel
ggarrange(metabolome_flux_panel, graphs_panel, ncol = 1, heights = c(4,1.3)) -> full_panel
full_panel
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_1.png",full_panel, height = 10, width = 10, dpi= 300, bg='white')
setwd("/DeepenData/Repos/geometric_cobra")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
get_processed_data <- function(df, percentile,labels){
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edge_weights_x_patients %<>% t %>% scale %>% t   %>%as.data.frame()
edge_weights_x_patients %>% abs()   %>%  rowSums() -> all_edge_scores
edges_genes   <- df%>%  dplyr::select_if(is.character)
edges_genes['all_edge_scores'] <- all_edge_scores
#edges_genes %>% dplyr::arrange(desc(all_edge_scores))
cutoff <- quantile(all_edge_scores, probs =percentile )
mask <- all_edge_scores > cutoff
edges_genes[mask,] -> edges_genes#%>% arrange(desc(all_edge_scores))
edge_weights_x_patients[mask,] -> edge_weights_x_patients
rownames(edge_weights_x_patients) <- NULL
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(1, 0))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
return(list(processed_data,all_edge_scores,cutoff, labels_SAMPLE, edges_genes_SAMPLE,mask))
}
make_heatmap <- function(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = T){
all_edge_scores[all_edge_scores > cutoff]-> edge_scores
processed_data %>% as.data.frame() ->processed_data_df
processed_data_df['edge_scores'] <- edge_scores
processed_data_df %>% arrange(desc(edge_scores)) -> processed_data_df_sorted
processed_data_df_sorted %>% dplyr::pull('edge_scores') -> edge_scores_sorted
processed_data_df_sorted['edge_scores'] <- NULL
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), 'Group' = labels_SAMPLE,
col = list(fontsize = 2, 'Group' = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
if(small){
top_annotation <- columnAnnotation(
`Score` = anno_lines(size = unit(.8, "mm"), pt_gp = gpar(col = 'red4'),add_points = TRUE,
edge_scores_sorted %>% rescale(), height = unit(1, "cm")))
ht <- Heatmap( t(processed_data_df_sorted),
cluster_columns = F,
show_heatmap_legend = F,
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "ward.D"),
show_column_names = F,
show_row_names = F,
show_row_dend = F,
right_annotation = right_annotation,
top_annotation   = top_annotation,
border = TRUE)
return(ht  %>% ggplotify::as.ggplot() )
} else{
top_annotation <- columnAnnotation(
`Score` = anno_lines(size = unit(1, "mm"), pt_gp = gpar(col = 'red4'),add_points = TRUE,
edge_scores_sorted %>% rescale(), height = unit(1, "cm")))
ht <- Heatmap( t(processed_data_df_sorted),
#cluster_columns = T,
show_heatmap_legend = T,
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "ward.D2"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "ward.D2"),
show_column_names = F,
show_row_names = F,
show_row_dend = T,
show_column_dend = T,
right_annotation = right_annotation,
top_annotation   = top_annotation,
border = TRUE,
#clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
#cluster_columns              =  function(x) fastcluster::hclust(dist(x), "ward.D"),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
name = "Weight",
#column_km = 2,
#column_gap = unit(2, "mm")
)
return(
list(ht  ,  t(processed_data_df_sorted) )
)
} }
get_heatmap_subplots <- function(df, labels, export_subgraph_csv, path, cutoff_narrow_heatmap){
data_plus_labels <- get_processed_data(df, .80,labels)
data_plus_labels[[1]] -> processed_data
data_plus_labels[[2]] -> all_edge_scores
data_plus_labels[[3]] -> cutoff
data_plus_labels[[4]] -> labels_SAMPLE
make_heatmap(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = T)-> flux_wider_heatmap
data_plus_labels <- get_processed_data(df, cutoff_narrow_heatmap,labels)
data_plus_labels[[1]] -> processed_data
data_plus_labels[[2]] -> all_edge_scores
data_plus_labels[[3]] -> cutoff
data_plus_labels[[4]] -> labels_SAMPLE
data_plus_labels[[5]] -> edges_genes_SAMPLE
data_plus_labels[[6]] -> mask
make_heatmap(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = F) -> flux_narrow_heatmap
if(export_subgraph_csv){
setwd("/DeepenData/Repos/geometric_cobra")
#write_csv(df[mask, ], path)
write_csv(cbind(edges_genes_SAMPLE,processed_data), path)
}
subplots <- list(flux_wider_heatmap  ,  flux_narrow_heatmap[[1]] ,  flux_narrow_heatmap[[2]])
return(subplots)}
get_subgraph_subplot <- function(path){
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG(path)
graph <- ggplot() + background_image(img)
return(graph)}
make_panel <- function(df, labels, if_export, subgraph_exporting_path, graph_subplot_image_path, cutoff_narrow_heatmap, subplot_labels ){
subplots_flux  <- get_heatmap_subplots(df, labels, if_export, subgraph_exporting_path, cutoff_narrow_heatmap)
subgraph_subplot <-get_subgraph_subplot(graph_subplot_image_path)
ggarrange (subplots_flux[[2]]  %>% ggplotify::as.ggplot(), subgraph_subplot, widths = c(1,1), labels = subplot_labels[[1]] , vjust = .9, hjust = .13) -> lower_panel
ggarrange(subplots_flux[[1]] %>% ggplotify::as.ggplot(), lower_panel, ncol = 1, heights = c(.5,1), labels = subplot_labels[[2]] , vjust = .9, hjust = .13) -> full_panel
return(list(full_panel,  subplots_flux[[2]], subplots_flux[[3]] ))
}
setwd("/DeepenData/Repos/geometric_cobra")
df_conc     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concentration.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_conc <- read_csv("./results/dataloaders/labels_masked_only_Concen.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_conc, labels_conc, F, "",  "./results/figures/Figure_3_subplot_Concentration.png", .99, list(c('b', 'c'),c("a",""))) -> upper_panel;
#upper_panel[[1]]
upper_panel
setwd("/DeepenData/Repos/geometric_cobra")
df_conc     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concentration.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_conc <- read_csv("./results/dataloaders/labels_masked_only_Concen.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_conc, labels_conc, F, "",  "./results/figures/Figure_3_subplot_Concentration.png", .98, list(c('b', 'c'),c("a",""))) -> upper_panel;
upper_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_conc     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concentration.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_conc <- read_csv("./results/dataloaders/labels_masked_only_Concen.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_conc, labels_conc, F, "",  "./results/figures/Figure_3_subplot_Concentration.png", .991, list(c('b', 'c'),c("a",""))) -> upper_panel;
upper_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_only_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_FLUX.png", .99, list(c('e', 'f'),c("d",""))) -> middle_panel;
middle_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_only_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_FLUX.png", .90, list(c('e', 'f'),c("d",""))) -> middle_panel;
middle_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_only_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_FLUX.png", .90, list(c('e', 'f'),c("d",""))) -> middle_panel;
middle_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_Concen_plus_Fluxes.png", .99, list(c('h', 'i'),c("g",""))) -> lower_panel;
lower_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_Concen_plus_Fluxes.png", .95, list(c('h', 'i'),c("g",""))) -> lower_panel;
lower_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_Concen_plus_Fluxes.png", .90, list(c('h', 'i'),c("g",""))) -> lower_panel;
lower_panel[[1]]
ggarrange(upper_panel[[1]], middle_panel[[1]], lower_panel[[1]], ncol = 1) -> full_panel
full_panel
