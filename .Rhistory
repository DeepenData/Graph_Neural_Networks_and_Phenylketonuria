data_plus_labels <- get_processed_data(df, 0.99,labels)
data_plus_labels[[1]] -> processed_data
data_plus_labels[[2]] -> all_edge_scores
data_plus_labels[[3]] -> cutoff
data_plus_labels[[4]] -> labels_SAMPLE
data_plus_labels[[5]] ->edges_genes_SAMPLE
print(dim(processed_data))
ht <- make_heatmap(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = F)
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
#heatmap_clusters %>% count(Cluster, sort = TRUE) %>% .[['Cluster']] -> clusters_descending_sorted
#heatmap_clusters %>% count(Cluster, sort = TRUE) %>% .[['Cluster']] -> clusters_descending_sorted
#clusters_descending_sorted[1:length(clusters_descending_sorted)] -> real_clusters
get_entrez_IDs_cluster <- function(a_cluster) {
edges_clusters   <-  heatmap_clusters[['Cluster']]
cluster_mask     <- edges_clusters ==a_cluster
genes_list       <- edges_genes_SAMPLE$genes[cluster_mask] %>% str_extract_all('\\d+(?=\\.)')
entrez_IDs       <- genes_list%>% unlist() %>% unique()
return(entrez_IDs)}
clusters <- unique(heatmap_clusters[['Cluster']])
lapply(clusters, get_entrez_IDs_cluster) %>% purrr::set_names(clusters) %>% .[real_clusters]  -> clusters_list # %>% purrr::set_names(c("C1", "C3", "C4")) -> clusters_list
lapply(clusters, get_entrez_IDs_cluster) %>% purrr::set_names(clusters)
clusters
lapply(clusters, get_entrez_IDs_cluster) %>% purrr::set_names(clusters) %>% .[clusters]  -> clusters_list # %>% purrr::set_names(c("C1", "C3", "C4")) -> clusters_list
clusters_list
get_entrez_IDs_cluster <- function(a_cluster) {
edges_clusters   <-  heatmap_clusters[['Cluster']]
cluster_mask     <- edges_clusters ==a_cluster
genes_list       <- edges_genes_SAMPLE$genes[cluster_mask] %>% str_extract_all('\\d+(?=\\.)')
entrez_IDs       <- genes_list%>% unlist() %>% unique()
return(entrez_IDs)}
clusters <- unique(heatmap_clusters[['Cluster']])
lapply(clusters, get_entrez_IDs_cluster) %>% purrr::set_names(clusters)  -> clusters_list # %>% purrr::set_names(c("C1", "C3", "C4")) -> clusters_list
ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
#%>% as_tibble() %>% nest(name_1006= name_1006) %>% mutate(name_1006 = name_1006) -> nested_df
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
Cluster_genes_concentration.csv<- read_csv( "./results/dataframes/Cluster_genes_concentration.csv")
Cluster_genes_flux.csv<- read_csv( "./results/dataframes/Cluster_genes_flux.csv")
Cluster_genes_concentration_plus_flux.csv<- read_csv( "./results/dataframes/Cluster_genes_concentration_plus_flux.csv")
setwd("/DeepenData/Repos/geometric_cobra")
Cluster_genes_concentration <- read_csv( "./results/dataframes/Cluster_genes_concentration.csv")
Cluster_genes_flux <- read_csv( "./results/dataframes/Cluster_genes_flux.csv")
Cluster_genes_concentration_plus_flux <- read_csv( "./results/dataframes/Cluster_genes_concentration_plus_flux.csv")
Cluster_genes_concentration
Cluster_genes_concentration$genes
Cluster_genes_concentration$genes  %>% str_extract_all('\\d+(?=\\.)')
Cluster_genes_concentration$genes  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
Cluster_genes_concentration$genes
Cluster_genes_concentration
Cluster_genes_concentration %>%  dplyr::filter(Cluster == 1)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
df = Cluster_genes_concentration
a_cluster = 1
df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
df        = Cluster_genes_concentration
a_cluster = 1
get_gene_cluster(df, a_cluster){
df        = Cluster_genes_concentration
a_cluster = 1
get_gene_cluster(df, a_cluster){
df        = Cluster_genes_concentration
a_cluster = 1
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_gene_cluster(df, a_cluster)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_gene_cluster(Cluster_genes_concentration, 1)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_gene_cluster(Cluster_genes_concentration, 2)
purrr::map2(c(Cluster_genes_concentration, Cluster_genes_concentration), c(1,2))
purrr::map2(c(Cluster_genes_concentration, Cluster_genes_concentration), c(1,2), get_gene_cluster)
Cluster_genes_concentration
purrr::map2(c(Cluster_genes_concentration, Cluster_genes_concentration), c(1,2), get_gene_cluster)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
list(
"ss" = get_gene_cluster(Cluster_genes_concentration, 1),
"dd" = get_gene_cluster(Cluster_genes_concentration, 2)
)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
list(
"1" = get_gene_cluster(Cluster_genes_concentration, 1),
"2" = get_gene_cluster(Cluster_genes_concentration, 2)
)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
concentration <- list(
"1" = get_gene_cluster(Cluster_genes_concentration, 1),
"2" = get_gene_cluster(Cluster_genes_concentration, 2)
)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_clusters_list <- function(df){
clusters_list <- list(
"1" = get_gene_cluster(df, 1),
"2" = get_gene_cluster(df, 2)
return(clusters_list)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_clusters_list <- function(df){
clusters_list <- list(
"1" = get_gene_cluster(df, 1),
"2" = get_gene_cluster(df, 2))
return(clusters_list)
)}
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_clusters_list <- function(df){
clusters_list <- list(
"1" = get_gene_cluster(df, 1),
"2" = get_gene_cluster(df, 2))
return(clusters_list)
}
get_clusters_list(Cluster_genes_concentration)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_clusters_list <- function(df){
clusters_list <- list(
"1" = get_gene_cluster(df, 1),
"2" = get_gene_cluster(df, 2))
return(clusters_list)
}
get_clusters_list(Cluster_genes_concentration)
get_clusters_list(Cluster_genes_flux)
get_clusters_list(Cluster_genes_concentration_plus_flux)
get_gene_cluster<- function(df, a_cluster){
genes <-  df %>%  dplyr::filter(Cluster == a_cluster)   %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
return(genes
)}
get_clusters_list <- function(df){
clusters_list <- list(
"1" = get_gene_cluster(df, 1),
"2" = get_gene_cluster(df, 2))
return(clusters_list)
}
get_clusters_list(Cluster_genes_concentration)           -> concentration
get_clusters_list(Cluster_genes_flux)                    -> flux
get_clusters_list(Cluster_genes_concentration_plus_flux) -> concentration_plus_flux
ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
#%>% as_tibble() %>% nest(name_1006= name_1006) %>% mutate(name_1006 = name_1006) -> nested_df
transporters <- purrr::map2(concentration, c(T,T), get_functional_annots)
reactions    <- purrr::map2(concentration, c(F,F), get_functional_annots)
transporters
reactions
ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
#%>% as_tibble() %>% nest(name_1006= name_1006) %>% mutate(name_1006 = name_1006) -> nested_df
transporters <- purrr::map2(concentration, c(T,T), get_functional_annots)
reactions    <- purrr::map2(concentration, c(F,F), get_functional_annots)
transporters
reactions
ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
}
get_transporters_and_reactions(concentration)
ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
return(list(reactions,transporters))
}
get_transporters_and_reactions(concentration) -> transporters_and_reactions
transporters_and_reactions
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
return(list('reactions'=reactions,'transporters'=transporters))
}
get_transporters_and_reactions(concentration) -> transporters_and_reactions
transporters_and_reactions
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
return(list('reactions'=reactions[1],'transporters'=transporters))
}
get_transporters_and_reactions(concentration) -> transporters_and_reactions
transporters_and_reactions
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
return(list('reactions'=reactions,'transporters'=transporters))
}
get_transporters_and_reactions(concentration) -> transporters_and_reactions
transporters_and_reactions
transporters_and_reactions[1]
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull)
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull)
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
return()
}
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull) -> reaction_genes
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull) -> transporter_genes
reaction_genes
list("reaction_genes"= reaction_genes)
transporters_and_reactions
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull) -> reaction_genes
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull) -> transporter_genes
return(list("reaction_genes"= reaction_genes,  'transporter_genes'=transporter_genes))
}
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull) -> reaction_genes
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull) -> transporter_genes
return(list("reaction_genes"= reaction_genes,  'transporter_genes'=transporter_genes))
}
get_transporters_and_reactions(concentration)
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull) -> reaction_genes
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull) -> transporter_genes
return(list( reaction_genes,  'transporter_genes'=transporter_genes))
}
get_transporters_and_reactions(concentration)
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull) -> reaction_genes
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull) -> transporter_genes
return(list("reactions"= reaction_genes,  'transporters'=transporter_genes))
}
get_transporters_and_reactions(concentration)
get_transporters_and_reactions <- function(clusters_list){
transporters <- purrr::map2(clusters_list, c(T,T), get_functional_annots)
reactions    <- purrr::map2(clusters_list, c(F,F), get_functional_annots)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
purrr::map2(transporters_and_reactions$reactions, c("Entrez ID","Entrez ID"), pull) -> reaction_genes
purrr::map2(transporters_and_reactions$transporters, c("Entrez ID","Entrez ID"), pull) -> transporter_genes
return(list("reactions"= reaction_genes,  'transporters'=transporter_genes))
}
get_transporters_and_reactions(concentration) -> transporters_and_reactions_concentration
transporters_and_reactions_concentration$reactions
transporters_and_reactions_concentration$reactions %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-2, qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
get_transporters_and_reactions(concentration) -> transporters_and_reactions_concentration
get_transporters_and_reactions(flux) -> transporters_and_reactions_flux
get_transporters_and_reactions(concentration_plus_flux) -> transporters_and_reactions_concentration_plus_flux
transporters_and_reactions_concentration$reactions %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-2, qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-2, qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-3, qvalueCutoff=1e-3)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-5, qvalueCutoff=1e-5)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$transporters %>%
compareCluster(fun='enrichKEGG', pvalueCutoff=1e-5, qvalueCutoff=1e-5)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-5, qvalueCutoff=1e-5)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$reactions %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration$transporters %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_flux$reactions %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-2, qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_flux$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-5, qvalueCutoff=1e-5)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_flux$reactions %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-3, qvalueCutoff=1e-3)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_flux$reactions %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_flux$transporters %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$reactions %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-3, qvalueCutoff=1e-3)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$reactions %>%
compareCluster(fun='enrichPathway', pvalueCutoff=5e-2, qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-5, qvalueCutoff=1e-5)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$transporters %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-2, qvalueCutoff=1e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 5, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$reactions %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$transporters %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 5, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration_plus_flux$transporters %>% compareCluster(fun='enrichDGN', pvalueCutoff=5e-2,  qvalueCutoff=5e-2)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 6, label_format =80)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6))
transporters_and_reactions_concentration
transporters_and_reactions_concentration %>% unlist
transporters_and_reactions_concentration %>% unlist %>% as.vector()
transporters_and_reactions_flux %>% unlist %>% as.vector()
transporters_and_reactions_concentration %>% unlist %>% as.vector()
transporters_and_reactions_flux %>% unlist %>% as.vector()
transporters_and_reactions_concentration_plus_flux%>% unlist %>% as.vector()
transporters_and_reactions_flux %>% unlist %>% as.vector()
transporters_and_reactions_concentration %>% unlist %>% as.vector()
transporters_and_reactions_flux %>% unlist %>% as.vector()
transporters_and_reactions_concentration_plus_flux%>% unlist %>% as.vector()
transporters_and_reactions_concentration %>% unlist %>% as.vector() %>% data.frame()
transporters_and_reactions_concentration %>% unlist %>% as.vector() %>% data.frame("kk"= .)
transporters_and_reactions_concentration %>% unlist %>% as.vector() %>% data.frame("C"= .)
transporters_and_reactions_flux %>% unlist %>% as.vector()  %>% data.frame("F"= .)
transporters_and_reactions_concentration_plus_flux%>% unlist %>% as.vector() %>% data.frame("CF"= .)
transporters_and_reactions_concentration %>% unlist %>% as.vector() %>% data.frame("C"= .) %>% write_csv("./results/dataframes/entrez_IDs_C.csv")
setwd("/DeepenData/Repos/geometric_cobra")
transporters_and_reactions_concentration %>% unlist %>% as.vector() %>% data.frame("C"= .) %>% write_csv("./results/dataframes/entrez_IDs_C.csv")
transporters_and_reactions_flux %>% unlist %>% as.vector()  %>% data.frame("F"= .) %>% write_csv("./results/dataframes/entrez_IDs_F.csv")
transporters_and_reactions_concentration_plus_flux%>% unlist %>% as.vector() %>% data.frame("CF"= .)  %>% write_csv("./results/dataframes/entrez_IDs_CF.csv")
setwd("/DeepenData/Repos/geometric_cobra")
