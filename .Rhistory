data_plus_labels <- get_processed_data(df_flux, .91, labels_flux)
data_plus_labels[[1]] -> processed_data
data_plus_labels[[5]] -> edges_genes_SAMPLE
#cbind(edges_genes_SAMPLE,processed_data)
edges_genes_SAMPLE['all_edge_scores'] <- scales::rescale(edges_genes_SAMPLE$all_edge_scores, c(0,1))
write_csv(edges_genes_SAMPLE,  "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
get_processed_data <- function(df, percentile,labels){
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edge_weights_x_patients %<>% t %>% scale %>% t   %>%as.data.frame()
edge_weights_x_patients %>% abs()   %>%  rowSums() -> all_edge_scores
edges_genes   <- df%>%  dplyr::select_if(is.character)
edges_genes['all_edge_scores'] <- all_edge_scores
#edges_genes %>% dplyr::arrange(desc(all_edge_scores))
cutoff <- quantile(all_edge_scores, probs =percentile )
mask <- all_edge_scores > cutoff
edges_genes[mask,] -> edges_genes#%>% arrange(desc(all_edge_scores))
edge_weights_x_patients[mask,] -> edge_weights_x_patients
rownames(edge_weights_x_patients) <- NULL
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(1, 0))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
return(list(processed_data,all_edge_scores,cutoff, labels_SAMPLE, edges_genes_SAMPLE,mask))
}
make_heatmap <- function(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = T){
all_edge_scores[all_edge_scores > cutoff]-> edge_scores
processed_data %>% as.data.frame() ->processed_data_df
processed_data_df['edge_scores'] <- edge_scores
processed_data_df %>% arrange(desc(edge_scores)) -> processed_data_df_sorted
processed_data_df_sorted %>% dplyr::pull('edge_scores') -> edge_scores_sorted
processed_data_df_sorted['edge_scores'] <- NULL
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), 'Group' = labels_SAMPLE,
col = list(fontsize = 2, 'Group' = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
if(small){
top_annotation <- columnAnnotation(
`Score` = anno_lines(size = unit(.8, "mm"), pt_gp = gpar(col = 'red4'),add_points = TRUE,
edge_scores_sorted %>% rescale(), height = unit(1, "cm")))
ht <- Heatmap( t(processed_data_df_sorted),
cluster_columns = F,
show_heatmap_legend = F,
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "ward.D"),
show_column_names = F,
show_row_names = F,
show_row_dend = F,
right_annotation = right_annotation,
top_annotation   = top_annotation,
border = TRUE)
return(ht  %>% ggplotify::as.ggplot() )
} else{
top_annotation <- columnAnnotation(
`Score` = anno_lines(size = unit(1, "mm"), pt_gp = gpar(col = 'red4'),add_points = TRUE,
edge_scores_sorted %>% rescale(), height = unit(1, "cm")))
ht <- Heatmap( t(processed_data_df_sorted),
#cluster_columns = T,
show_heatmap_legend = T,
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "ward.D2"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "ward.D2"),
show_column_names = F,
show_row_names = F,
show_row_dend = T,
show_column_dend = T,
right_annotation = right_annotation,
top_annotation   = top_annotation,
border = TRUE,
#clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"),
#cluster_columns              =  function(x) fastcluster::hclust(dist(x), "ward.D"),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
name = "Weight",
#column_km = 2,
#column_gap = unit(2, "mm")
)
return(
list(ht  ,  t(processed_data_df_sorted) )
)
} }
get_heatmap_subplots <- function(df, labels, export_subgraph_csv, path, cutoff_narrow_heatmap){
data_plus_labels <- get_processed_data(df, .80,labels)
data_plus_labels[[1]] -> processed_data
data_plus_labels[[2]] -> all_edge_scores
data_plus_labels[[3]] -> cutoff
data_plus_labels[[4]] -> labels_SAMPLE
make_heatmap(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = T)-> flux_wider_heatmap
data_plus_labels <- get_processed_data(df, cutoff_narrow_heatmap,labels)
data_plus_labels[[1]] -> processed_data
data_plus_labels[[2]] -> all_edge_scores
data_plus_labels[[3]] -> cutoff
data_plus_labels[[4]] -> labels_SAMPLE
data_plus_labels[[5]] -> edges_genes_SAMPLE
data_plus_labels[[6]] -> mask
make_heatmap(processed_data, all_edge_scores, cutoff,labels_SAMPLE, small = F) -> flux_narrow_heatmap
if(export_subgraph_csv){
setwd("/DeepenData/Repos/geometric_cobra")
#write_csv(df[mask, ], path)
write_csv(cbind(edges_genes_SAMPLE,processed_data), path)
}
subplots <- list(flux_wider_heatmap  ,  flux_narrow_heatmap[[1]] ,  flux_narrow_heatmap[[2]])
return(subplots)}
get_subgraph_subplot <- function(path){
setwd("/DeepenData/Repos/geometric_cobra")
img <- png::readPNG(path)
graph <- ggplot() + background_image(img)
return(graph)}
make_panel <- function(df, labels, if_export, subgraph_exporting_path, graph_subplot_image_path, cutoff_narrow_heatmap, subplot_labels ){
subplots_flux  <- get_heatmap_subplots(df, labels, if_export, subgraph_exporting_path, cutoff_narrow_heatmap)
subgraph_subplot <-get_subgraph_subplot(graph_subplot_image_path)
ggarrange (subplots_flux[[2]]  %>% ggplotify::as.ggplot(), subgraph_subplot, widths = c(1,1), labels = subplot_labels[[1]] , vjust = .9, hjust = .13) -> lower_panel
ggarrange(subplots_flux[[1]] %>% ggplotify::as.ggplot(), lower_panel, ncol = 1, heights = c(.5,1), labels = subplot_labels[[2]] , vjust = .9, hjust = .13) -> full_panel
return(list(full_panel,  subplots_flux[[2]], subplots_flux[[3]] ))
}
setwd("/DeepenData/Repos/geometric_cobra")
df_conc     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concentration.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_conc <- read_csv("./results/dataloaders/labels_masked_only_Concen.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_conc, labels_conc, F, "",  "./results/figures/Figure_3_subplot_Concentration.png", .99, list(c('b', 'c'),c("a",""))) -> upper_panel;
upper_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_only_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_FLUX.png", .90, list(c('e', 'f'),c("d",""))) -> middle_panel;
middle_panel[[1]]
setwd("/DeepenData/Repos/geometric_cobra")
df_flux     <-  read_csv("./results/explanations/to_functional_R_heatmap_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels_flux <- read_csv("./results/dataloaders/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
make_panel(df_flux, labels_flux, F, "",  "./results/figures/Figure_3_subplot_Concen_plus_Fluxes.png", .91, list(c('h', 'i'),c("g",""))) -> lower_panel;
lower_panel[[1]]
ggarrange(upper_panel[[1]], middle_panel[[1]], lower_panel[[1]], ncol = 1) -> full_panel
full_panel
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_3.png", full_panel, height = 13, width = 10)
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
#ensembl    <- useMart("ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl", httr_config = list(httr::config(timeout = 60)))
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl", httr_config = list(httr::config(timeout = 60)))
library(httr)
set_config(config(timeout = 60))
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(httr)
set_config(config(timeout = 90))
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
library(httr)
set_config(config(timeout = 90))
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl", host = "useast.ensembl.org")
#library(httr)
#set_config(config(timeout = 90))
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl", host = "useast.ensembl.org")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
C_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concentration.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
F_genes  <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_FLUX.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
CF_genes <- read_csv( "./results/explanations/to_GraphTools_visualization_explanatory_subgraph_MASKED_GIN_Concen_plus_Fluxes.csv")    %>%  .[['genes']]  %>% str_extract_all('\\d+(?=\\.)') %>% unlist() %>% unique()
#library(httr)
#set_config(config(timeout = 90))
Hs.ensembl <- useMart("ensembl",dataset="hsapiens_gene_ensembl", host = "useast.ensembl.org")
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters = F){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
get_transporters_and_reactions <- function(genes_entrez){
reactions    <- get_functional_annots(genes_entrez, transporters = F)
transporters <- get_functional_annots(genes_entrez, transporters = T)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
return(transporters_and_reactions)}
get_two_Entrez_gene_lists <- function(rxns_and_transps_list){
return(list(rxns_and_transps_list$reactions$`Entrez ID`, rxns_and_transps_list$transporters$`Entrez ID`) %>% purrr::set_names(c("rxns", "trns"))
)
}
get_transporters_and_reactions(C_genes) ->  Concentration_rxns_and_transps
genes_symbols <- list()
get_functional_annots <- function(entrez_IDs, transporters = F){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description'),filters ='entrezgene_id',values =entrez_IDs, mart = Hs.ensembl)
if(transporters){
temp %<>% filter(str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T)))
}
else {  temp %<>% filter(!str_detect(entrezgene_description,regex( '(solute.+?carrier)|transporter|aquapor|transport', ignore_case = T))) }
return(arrange(temp, hgnc_symbol) %>% purrr::set_names(c("Symbol", "Entrez ID", "Description")))}
get_transporters_and_reactions <- function(genes_entrez){
reactions    <- get_functional_annots(genes_entrez, transporters = F)
transporters <- get_functional_annots(genes_entrez, transporters = T)
transporters_and_reactions <- list('reactions'=reactions,'transporters'=transporters)
return(transporters_and_reactions)}
get_two_Entrez_gene_lists <- function(rxns_and_transps_list){
return(list(rxns_and_transps_list$reactions$`Entrez ID`, rxns_and_transps_list$transporters$`Entrez ID`) %>% purrr::set_names(c("rxns", "trns"))
)
}
get_transporters_and_reactions(C_genes) ->  Concentration_rxns_and_transps
get_transporters_and_reactions(F_genes) ->  Flux_rxns_and_transps
get_transporters_and_reactions(CF_genes) -> FluxConcentration_rxns_and_transps
setwd("/DeepenData/Repos/geometric_cobra/")
res <- readRDS("./results/genes/RNA_results.RDS")
res %>% rownames() -> all_ENSMUST
#Hs.ensembl       <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Mm.ensembl       <- useMart("ensembl",dataset="mmusculus_gene_ensembl")
#Hs.ensembl       <- useMart("ensembl",dataset="hsapiens_gene_ensembl")
Mm.ensembl       <- useMart("ensembl",dataset="mmusculus_gene_ensembl", host = "useast.ensembl.org")
temp_1           <- getBM(attributes=c('ensembl_transcript_id','hsapiens_homolog_ensembl_gene'),filters ='ensembl_transcript_id',values =all_ENSMUST, mart = Mm.ensembl)
colnames(temp_1) <- c("mouse_ensembl_transcript_id", "hsapiens_ensembl")
temp_2           <- getBM(attributes=c('ensembl_gene_id','hgnc_symbol','entrezgene_id','entrezgene_description'),
filters ='ensembl_gene_id',values = temp_1$hsapiens_ensembl, mart = Hs.ensembl)
colnames(temp_2)           <- c("hsapiens_ensembl", "hgnc_symbol", "entrezgene_id", 'description')
inner_join(temp_1, temp_2) -> all_gene_codes
res['mouse_ensembl_transcript_id'] <- rownames(res)
inner_join(as.data.frame(res) ,all_gene_codes ) %>% drop_na() %>% arrange(hgnc_symbol) -> annotated_results
annotated_results %>%  filter(str_detect(description, regex("hydroxybutyrate dehy", ignore_case=T))) %>% filter(padj < 0.01)
annotated_results %>%  filter(str_detect(hgnc_symbol, regex("HMGCR", ignore_case=T))) %>% filter(padj < 0.05)
library(EnhancedVolcano)
library(magrittr)
get_processed_results <- function(annotated_results, subset){
annotated_results %>% dplyr::filter(entrezgene_id %in% subset) %>% dplyr::select(-c(mouse_ensembl_transcript_id,hsapiens_ensembl,entrezgene_id, description)) %>%
group_by(hgnc_symbol) %>% summarise_all(median,  na.rm = TRUE) ->processed_results
return(processed_results)
}
make_volcano <- function(df_res,labSize, subtitle, pValue_cutoff     = 0.05, FoldChnage_cutoff = .1){plot <- EnhancedVolcano(
df_res,
x = 'log2FoldChange',
y = 'padj',
title = NULL,
subtitle = subtitle,#paste0( names( conjuntos )[[i]], " - ", length( unique(conjuntos[[i]][ conjuntos[[i]] %in% df_res$gene_symbol_sig ]) ), " trancripts" ),
pCutoff = pValue_cutoff,
FCcutoff = FoldChnage_cutoff,
pointSize = 3,
lab = df_res$hgnc_symbol,
#legendPosition = 'right',
labSize = labSize,
boxedLabels = T,
drawConnectors = TRUE,
widthConnectors = 0.2,
colConnectors = 'black',
max.overlaps = 200, #Inf,
)+ ggthemes::theme_few() #+
# coord_flip() +
#theme(legend.position="bottom")
return(plot)}
make_volcano_panel <- function(rxns_and_transps, labSize_1 =3, labSize_2=3,  widths = c(1,.5), pValue_cutoff = 0.05, common.legend.pos = 'top', left_y_limts = c(0,10), right_y_limts = c(0,10)){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['rxns']]) -> Flux_rxns
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[['trns']]) -> Flux_trns
volcano_panel <- ggarrange(make_volcano(Flux_rxns, labSize = labSize_1, subtitle = 'Reactions', pValue_cutoff = pValue_cutoff) + ylim(left_y_limts),
make_volcano(Flux_trns, labSize = labSize_2, subtitle = 'Transporters', pValue_cutoff=pValue_cutoff) + ylim(right_y_limts), nrow = 1, widths = widths, common.legend = T, legend = common.legend.pos)
return(volcano_panel)}
C_volcano  <- make_volcano_panel(Concentration_rxns_and_transps, 2,2, c(1,1),     pValue_cutoff    = 0.05, left_y_limts = c(0,10), right_y_limts = c(0,10))
F_volcano  <- make_volcano_panel(Flux_rxns_and_transps, 2,2, widths =c(2.7,1),                      pValue_cutoff  = 0.01, common.legend.pos = 'none',left_y_limts = c(0,20.42), right_y_limts = c(0,12.5))
CF_volcano <- make_volcano_panel(FluxConcentration_rxns_and_transps, 2,2, widths =c(2.5,1),pValue_cutoff = 0.01, common.legend.pos = 'none', left_y_limts = c(0,20.42), right_y_limts = c(0,12.5))
volcanos_panel   <- ggarrange(C_volcano, F_volcano, CF_volcano, ncol = 1, common.legend = T, heights = c(.4,1,1), labels = c("b","d","f"))
volcanos_panel
Concentration_rxns_and_transps %>% get_two_Entrez_gene_lists %>% purrr::set_names(c("Reactions","Transporters")) %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-3, qvalueCutoff=1e-3)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 8, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6)) -> C_enrichPathway
#ggarrange(C_enrichPathway, C_volcano, nrow = 1) -> upper_panel
Flux_rxns_and_transps %>% get_two_Entrez_gene_lists %>% purrr::set_names(c("Reactions","Transporters")) %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-3, qvalueCutoff=1e-3)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 8, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6)) -> F_enrichPathway
#ggarrange(F_enrichPathway, F_volcano, nrow = 1, widths = c(1,1.2)) -> middle_panel
FluxConcentration_rxns_and_transps %>% get_two_Entrez_gene_lists %>% purrr::set_names(c("Reactions","Transporters")) %>%
compareCluster(fun='enrichPathway', pvalueCutoff=1e-3, qvalueCutoff=1e-3)-> enrich_output
enrich_output %>% dotplot(showCategory = 10, font.size = 8, label_format =90)+
theme(
legend.text=element_text(size=6),
legend.position = "bottom",
#legend.box = "vertical",
text = element_text(size=6)) -> FC_enrichPathway
#ggarrange(FC_enrichPathway, CF_volcano, nrow = 1, widths = c(1,1.2)) -> lower_panel
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_4_volcano_panel_subplot.png", volcanos_panel, height = 10, width = 10, bg="white", dpi = 400)
enrichment_panel <-  ggarrange(C_enrichPathway, F_enrichPathway, FC_enrichPathway, ncol = 1, common.legend = T, heights = c(.7,1.1,1), labels = c("a","c","e"))
ggarrange(enrichment_panel, volcanos_panel, nrow = 1, widths = c(1,1.6)) -> full_panel
full_panel
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/Figure_4.png", full_panel, height = 13, width = 15.2, bg="white", dpi = 500)
get_DEG_table <- function(rxns_and_transps, gene_set){
get_processed_results(annotated_results, rxns_and_transps %>% get_two_Entrez_gene_lists %>% .[[gene_set]]) -> DEG_table
return(DEG_table)
}
get_DEG_table(Concentration_rxns_and_transps, "rxns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_C
get_DEG_table(Concentration_rxns_and_transps, "trns")     %>% filter(padj < .05 & abs(log2FoldChange) > 0.1) -> DEGs_trns_C
get_DEG_table(Flux_rxns_and_transps, "rxns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_F
get_DEG_table(Flux_rxns_and_transps, "trns")              %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_trns_F
get_DEG_table(FluxConcentration_rxns_and_transps, "rxns") %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_rxns_CF
get_DEG_table(FluxConcentration_rxns_and_transps, "trns") %>% filter(padj < .01 & abs(log2FoldChange) > 0.1) -> DEGs_trns_CF
library(ggvenn)
l <- list(
DEGs_C = c(DEGs_rxns_C$hgnc_symbol, DEGs_trns_C$hgnc_symbol),
DEGs_F =  c(DEGs_rxns_F$hgnc_symbol, DEGs_trns_F$hgnc_symbol),
DEGs_CF = c(DEGs_rxns_CF$hgnc_symbol, DEGs_trns_CF$hgnc_symbol))
ggvenn(l,  stroke_size = 0.4,  set_name_size = 2, text_size = 3.5, show_elements = F) -> supplemental_venn_diagram
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplemental_venn_diagram.png", supplemental_venn_diagram, height = 4, width = 4, bg="white", dpi = 400)
DEGs_C = c(DEGs_rxns_C$hgnc_symbol, DEGs_trns_C$hgnc_symbol)
DEGs_F =  c(DEGs_rxns_F$hgnc_symbol, DEGs_trns_F$hgnc_symbol)
DEGs_CF = c(DEGs_rxns_CF$hgnc_symbol, DEGs_trns_CF$hgnc_symbol)
all_genes <- c(DEGs_C, DEGs_F, DEGs_CF) %>% unique()
get_gene_row <- function(a_gene){
gene_row <-  c("","","")
if(a_gene %in% DEGs_C){gene_row[1] <-  "\U1F5F8"}
if(a_gene %in% DEGs_F){gene_row[2] <-  "\U1F5F8"}
if(a_gene %in% DEGs_CF){gene_row[3] <-  "\U1F5F8"}
return(gene_row)
}
#a_gene    <- 'UYURT'
my_rows <- tibble()
for (a_gene in all_genes){
a_row <- get_gene_row(a_gene)
my_rows <- rbind(my_rows, a_row)
}
names(my_rows) <- c("Conc","Flux","Conc+Flux")
my_rows["hgnc_symbol"] <- all_genes
inner_join(my_rows,
annotated_results[c("hgnc_symbol", "entrezgene_id", "description")] %>% unique
)%>% dplyr::group_by(Conc, Flux) %>% arrange(desc("Conc+Flux"), .by_group=T) ->annotated_gene_groups
first_part <- ceiling(nrow(annotated_gene_groups)/2)
annotated_gene_groups[1:(first_part+20),]                                -> annotated_gene_groups_1
annotated_gene_groups[(first_part+20+1):nrow(annotated_gene_groups),]  -> annotated_gene_groups_2
base_size =8
main.title <- "Supplementary Table 1"
annotated_gene_groups_1 %>% ggtexttable(rows = NULL,theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 10, hjust = .09)  %>%
tab_add_footnote(text = "(Continued on next page)", size = 8, face = "italic") -> supplementary_gene_table_1_first
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_first.png", supplementary_gene_table_1_first, height = 10.5, width = 8, bg="white", dpi = 400)
base_size =8
main.title <- "(Continued from previous page)"
annotated_gene_groups_2 %>% ggtexttable(rows = NULL, theme = ttheme('mBlue', base_size = base_size,  padding = unit(c(1.4, 1.4), "mm"))) %>%
tab_add_title(text = main.title, face = "bold", padding = unit(.5, "line"), size = 8, hjust = .07) -> supplementary_gene_table_1_second
setwd("/DeepenData/Repos/geometric_cobra")
ggsave("./results/figures/supplementary_gene_table_1_second.png", supplementary_gene_table_1_second, height = 5, width = 7, bg="white", dpi = 200)
get_Biological_Processes <- function(DEGs){
temp <- getBM(attributes=c('hgnc_symbol',"entrezgene_id", 'entrezgene_description','namespace_1003','name_1006', 'definition_1006'),filters ='hgnc_symbol',values =DEGs$hgnc_symbol, mart = Hs.ensembl)
temp %>% dplyr::filter(namespace_1003 == "biological_process") -> df
df %>% dplyr::select(c(hgnc_symbol, entrezgene_description, entrezgene_id, name_1006)) %>% nest_by(hgnc_symbol, entrezgene_description, entrezgene_id) %>% mutate(data =paste0( purrr::flatten_chr(data) , collapse = ', ')) %>%dplyr::rename('Biological Processes' = data) -> df_annot
return(df_annot)
}
Biological_Processes <- map(list(DEGs_rxns_C, DEGs_trns_C, DEGs_rxns_F, DEGs_trns_F, DEGs_rxns_CF, DEGs_trns_CF),get_Biological_Processes)
library(openxlsx)
setwd("/DeepenData/Repos/geometric_cobra")
xlsx_path <- "./results/genes/Supplementary_Table_1_Differential_expressed_genes.xlsx"
openxlsx::write.xlsx(Biological_Processes[[1]], file = xlsx_path,  sheetName = "s1_reactions_from_concentration", append = T)
add_new_sheet <- function(xlsx_path, sheet_name, data_to_sheet ){
wb <- loadWorkbook(xlsx_path)
addWorksheet(wb,sheet_name)
writeData(wb,sheet_name,data_to_sheet)
saveWorkbook(wb,xlsx_path,overwrite = TRUE)}
add_new_sheet(xlsx_path,"s2_transport_from_concentration",Biological_Processes[[2]])
add_new_sheet(xlsx_path,"s3_reactions_from_flux",Biological_Processes[[3]])
add_new_sheet(xlsx_path,"s4_transport_from_flux",Biological_Processes[[4]])
add_new_sheet(xlsx_path,"s5_reactions_from_conc_and_flux",Biological_Processes[[5]])
add_new_sheet(xlsx_path,"s6_transport_from_conc_and_flux",Biological_Processes[[6]])
library(openxlsx)
setwd("/DeepenData/Repos/geometric_cobra")
xlsx_path <- "./results/genes/Supplementary_Table_1_Differential_expressed_genes.xlsx"
openxlsx::write.xlsx(Biological_Processes[[1]], file = xlsx_path,  sheetName = "s1_reactions_from_concentration", append = T)
add_new_sheet <- function(xlsx_path, sheet_name, data_to_sheet ){
wb <- loadWorkbook(xlsx_path)
addWorksheet(wb,sheet_name)
writeData(wb,sheet_name,data_to_sheet)
saveWorkbook(wb,xlsx_path,overwrite = TRUE)}
add_new_sheet(xlsx_path,"s2_transport_from_concentration",Biological_Processes[[2]])
add_new_sheet(xlsx_path,"s3_reactions_from_flux",Biological_Processes[[3]])
add_new_sheet(xlsx_path,"s4_transport_from_flux",Biological_Processes[[4]])
add_new_sheet(xlsx_path,"s5_reactions_from_conc_and_flux",Biological_Processes[[5]])
add_new_sheet(xlsx_path,"s6_transport_from_conc_and_flux",Biological_Processes[[6]])
