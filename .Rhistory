library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df     <-  read_csv("./results/dataframes/to_R_heatmap_explanatory_subgraph_MASKED_GCN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels <- read_csv("./results/dataframes/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edges_genes   <- df%>%  dplyr::select_if(is.character)
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(.5, 0.5))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
dim(processed_data)
view(edges_genes)
#view(edges_genes)
view(df)
transporters
reactions
real_clusters
clusters_list
edge_scores
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 3,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 3,
#row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
processed_data
edge_weights_x_patients_SAMPLE
df
edge_weights_x_patients
edge_weights_x_patients %>% rowSums()
edge_weights_x_patients #%>% rowSums()
edge_weights_x_patients %>% rowSums()
edge_weights_x_patients %>% colSums()
n_edges
n_edges
n_patients
edge_weights_x_patients %>% colSums()
edge_weights_x_patients %>% rowSums()
edge_weights_x_patients %>% rowSums() %>% length()
edge_weights_x_patients %>% rowSums()
edge_weights_x_patients %>% rowSums() -> all_edge_scores
edge_weights_x_patients
edges_genes
edges_genes['all_edge_scores'] <-
```
edge_weights_x_patients %>% rowSums() -> all_edge_scores
edges_genes['all_edge_scores'] <- all_edge_scores
edges_genes['all_edge_scores'] <- all_edge_scores
edges_genes
edges_genes
edges_genes %>% arrange(all_edge_scores)
?arrange
edges_genes %>% dplyr::arrange(all_edge_scores)
edges_genes %>% dplyr::arrange(desc(all_edge_scores))
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 3,
#row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
row_km = 2,
column_km = 3,
#row_gap = unit(2, "mm"),
#column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
#row_km = 2,
#column_km = 3,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
#row_km = 2,
column_km = 3,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
patients_mask
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df     <-  read_csv("./results/dataframes/to_R_heatmap_explanatory_subgraph_MASKED_GCN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels <- read_csv("./results/dataframes/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edges_genes   <- df%>%  dplyr::select_if(is.character)
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(1, 0))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
dim(processed_data)
#view(edges_genes)
#view(df)
patients_mask
edges_mask
edge_weights_x_patients %>% rowSums() -> all_edge_scores
edges_genes['all_edge_scores'] <- all_edge_scores
?arrange
edges_genes %>% dplyr::arrange(desc(all_edge_scores))
rowSums(processed_data) %>% as.vector() -> edge_scores
right_annotation <- rowAnnotation( gp = gpar(fontsize = 2), Group = labels_SAMPLE,
col = list(fontsize = 2, Group = c(
'Control'        = "darkgreen",
'PKU'           =  "gold")))
top_annotation <- columnAnnotation(`TS` = anno_lines( pch = 26, size = unit(5, "mm"), gp = gpar(col = 'red4'),
edge_scores, height = unit(1.5, "cm")))
bottom_annotation <- HeatmapAnnotation(foo = anno_block(labels = c("C1", "C2", "C3"),labels_gp = gpar(col = "darkslategray", fontsize = 9),
gp = gpar(fill = c("azure2","azure2","azure2","azure2"))))
#densityHeatmap(t(processed_data),  ylim = c(0.02, 0.5),  ylab = "some values", show_quantiles = F, mc.cores =20, cores = 20,
#               cluster_columns = TRUE,  clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "euclidean"))  %v%
ht <- Heatmap(t(processed_data),
clustering_distance_columns  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_columns              =  function(x) fastcluster::hclust(dist(x), "centroid"),
clustering_distance_rows  =  function(x) fastcluster::hclust(dist(x), "cosine"),
cluster_rows              =  function(x) fastcluster::hclust(dist(x), "centroid"),
name = "Edge weight",
border = TRUE,
#row_km = 2,
column_km = 3,
row_gap = unit(2, "mm"),
column_gap = unit(2, "mm"),
width = unit(14.5, "cm"),
height = unit(4.5, "cm"),
show_column_names = F,
show_row_names = F,
column_title = c( "Explanatory subgraph edges"),
column_title_gp = gpar(fontsize = 11),
row_title = c("Samples (patients)"),
row_title_gp = gpar(fontsize = 11),
row_dend_width    = unit(1.5, "cm"),
column_dend_height = unit(1.5,"cm"),
top_annotation = top_annotation,
right_annotation = right_annotation,
bottom_annotation = bottom_annotation, heatmap_legend_param = list(direction = "horizontal"))
heatmap_clusters <- waRRior::heatmap_extract_cluster(draw(ht), t(processed_data),  which = "column")
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df     <-  read_csv("./results/dataframes/to_R_heatmap_explanatory_subgraph_MASKED_GCN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels <- read_csv("./results/dataframes/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edges_genes   <- df%>%  dplyr::select_if(is.character)
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(1, 0))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
dim(processed_data)
#view(edges_genes)
#view(df)
library(umap)
edge_weights_x_patients
umap::umap(edge_weights_x_patients)
library(umap)
UMAP <- umap::umap(edge_weights_x_patients)
UMAP
str(UMAP)
str(UMAP$layout)
UMAP$layout
p <- ggplot(UMAP$layout)
p <- ggplot(UMAP$layout,aes(1,2))
data.frame(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
len(UMAP$layout)
length(UMAP$layout)
library(umap)
UMAP <- umap::umap(edge_weights_x_patients)
length(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
?umap::umap
str(UMAP)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =10)
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =10)
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =15)
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100)
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
str(UMAP)
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500)
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
str(UMAP)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500, method = 'umap-learn')
y
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500, method = 'umap-learn')
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500, method = 'umap-learn')
library(arrow)
library(tidyverse)
library(ComplexHeatmap)
library(scales)
library(ggpubr)
library(ggplot2)
library(DOSE)
library(magrittr)
library(biomaRt)
library(tidyverse)
library(clusterProfiler)
library(ReactomePA)
library(org.Hs.eg.db)
library(fastcluster)
setwd("/DeepenData/Repos/geometric_cobra")
df     <-  read_csv("./results/dataframes/to_R_heatmap_explanatory_subgraph_MASKED_GCN_Concen_plus_Fluxes.csv") %>% dplyr::select(-c("...1")) #to_R_heatmap_explanatory_subgraph_masked_NONflux.csv #to_R_heatmap_explanatory_subgraph_masked_FLUX.csv
labels <- read_csv("./results/dataframes/labels_masked_Concen_plus_Fluxes.csv")  %>%  dplyr::select(-c("...1")) %>% .[[1]] #test_labels_masked_NONflux.csv  #test_labels_masked_FLUX.csv
edge_weights_x_patients <- df%>%  dplyr::select_if(is.numeric)
edges_genes   <- df%>%  dplyr::select_if(is.character)
n_edges <- nrow(edges_genes)
n_patients <- length(labels)
edges_mask    <- sample(c(T,F), n_edges, replace = T, prob = c(1, 0))
patients_mask <- sample(c(T,F), n_patients, replace = T, prob = c(1, 0))
edge_weights_x_patients_SAMPLE <- edge_weights_x_patients[edges_mask,patients_mask]
labels_SAMPLE <- labels[patients_mask]
edges_genes_SAMPLE <- edges_genes[edges_mask,]
processed_data <- edge_weights_x_patients_SAMPLE %>% as.matrix() %>% rescale
dim(processed_data)
#view(edges_genes)
#view(df)
n_edges
n_patients
edge_weights_x_patients %>% rowSums() -> all_edge_scores
edges_genes['all_edge_scores'] <- all_edge_scores
?arrange
edges_genes %>% dplyr::arrange(desc(all_edge_scores))
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500, method = 'umap-learn')
?umap::umap
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500, method = 'naive')
str(UMAP)
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =100, n_epochs= 500, spread = 3, method = 'naive')
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =20, n_epochs= 200, spread = 3, method = 'naive')
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =20, n_epochs= 200, spread = 10, method = 'naive')
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =200, n_epochs= 200, spread = 10, method = 'naive')
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2))
p + geom_point()
library(umap)
UMAP <- umap::umap(edge_weights_x_patients, n_neighbors =200, n_epochs= 200, spread = 10, method = 'naive')
?umap::umap
str(UMAP)
dim(UMAP$layout)
p <- ggplot(data.frame(UMAP$layout),aes(X1, X2, size = all_edge_scores))
p + geom_point()
